{"version":3,"sources":["img/info.svg","components/WrappedField/index.js","components/TagsAutocomplete/index.js","components/HelpText/index.js","components/Radio/index.js","components/RequiredMetadata/index.js","components/RequiredMetadata/defaultValues.js","components/Navigation/index.js","components/MetadataForm/index.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","width","height","ref","ForwardRef","forwardRef","WrappedField","useState","toolTipShown","setToolTipShown","toggleToolTip","name","label","children","helptext","required","disabled","infoText","onClick","rest","choices","type","disabledClass","className","htmlFor","marginLeft","tabIndex","onKeyUp","event","keyCode","role","string","url","select","component","defaultValue","value","map","choice","radio","date","TagsAutocomplete","tags","render","arrayHelpers","placeholder","suggestions","allowNew","React","createRef","onAddition","push","onDelete","remove","HelpText","Radio","selected","styleClass","handleRadio","defaultChecked","onChange","defaultProps","RequiredMetadata","values","currentStep","apiUrl","apiKey","rights","setRights","license","setLicense","spatial","setSpatial","temporal","setTemporal","urlDisabled","setUrlDisabled","urlify","text","replace","toLowerCase","helpTextify","baseUrl","helpTexts","href","description","display","rows","titleField","placeholderText","e","rights_desc","spatial_location_desc","onKeyDown","publisher","subagency","public_access_level","data_quality","license_others","identifier","spatial_location","temporal_start_date","temporal_end_date","contact_name","contact_email","unique_id","Navigation","handleSteps","MetadataForm","ownerOrg","setCurrentStep","initialValues","defaultRequiredValues","enableReinitialize","validateOnChange","validateOnBlur","handleSubmit","onSubmit","fetchDatasetsOpts","errors","App","Boolean","window","location","hostname","match","root","document","getElementById","getAttribute","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ae4b1fe0.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M437.02,74.98C388.667,26.629,324.38,0,256,0S123.333,26.629,74.98,74.98C26.629,123.333,0,187.62,0,256    s26.629,132.667,74.98,181.02C123.333,485.371,187.62,512,256,512s132.667-26.629,181.02-74.98    C485.371,388.667,512,324.38,512,256S485.371,123.333,437.02,74.98z M256,70c30.327,0,55,24.673,55,55c0,30.327-24.673,55-55,55    c-30.327,0-55-24.673-55-55C201,94.673,225.673,70,256,70z M326,420H186v-30h30V240h-30v-30h110v180h30V420z\",\n  fill: \"#0050D8\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgInfo = function SvgInfo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: \"512px\",\n    height: \"512px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgInfo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/info.5e143234.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'formik';\nimport { ReactComponent as Info } from '../../img/info.svg';\nimport '../../css/custom.css';\n\nconst WrappedField = (props) => {\n  const [toolTipShown, setToolTipShown] = useState(false);\n  // eslint-disable-next-line\n  const toggleToolTip = () => setToolTipShown(toolTipShown ? false : true);\n\n  const {\n    name,\n    label,\n    children,\n    helptext,\n    required,\n    id,\n    disabled,\n    infoText,\n    onClick,\n    ...rest\n  } = props;\n\n  const choices = rest.choices || [];\n  const type = rest.type || 'string';\n\n  let disabledClass = '';\n  if (disabled) {\n    disabledClass = 'disabled';\n  } else {\n    disabledClass = '';\n  }\n\n  return (\n    <div>\n      <label className=\"usa-label\" htmlFor={id}>\n        {label}\n        {label && required && <span>*</span>}\n\n        {/* Tooltip */}\n        {infoText && (\n          <div className={`tooltip ${toolTipShown ? 'show' : ''}`}>\n            <Info\n              height=\"15px\"\n              width=\"15px\"\n              style={{ marginLeft: '.5em' }}\n              tabIndex={0}\n              onClick={() => toggleToolTip()}\n              onKeyUp={(event) => {\n                if (event.keyCode === 13) {\n                  toggleToolTip();\n                }\n              }}\n            />\n            <span className=\"tooltiptext\">\n              <span\n                tabIndex={0}\n                className=\"close\"\n                onClick={() => setToolTipShown(false)}\n                role=\"button\"\n                onKeyUp={(event) => {\n                  if (event.keyCode === 13) {\n                    setToolTipShown(false);\n                  }\n                }}\n              >\n                <span className=\"close-tag\">&times;</span>\n              </span>\n              <h3>{label}</h3>\n              <p>{infoText}</p>\n            </span>\n          </div>\n        )}\n      </label>\n\n      <div className={`usa-helptext ${disabledClass}`}>{helptext}</div>\n      {onClick ? (\n        <button className=\"clear-button\" onClick={onClick} type=\"button\">\n          Remove\n        </button>\n      ) : (\n        ''\n      )}\n      {\n        {\n          string: (\n            <Field\n              className={`usa-input ${disabledClass}`}\n              disabled={disabled}\n              id={id}\n              name={name}\n              {...rest}\n            />\n          ),\n          url: (\n            <Field\n              className={`usa-input ${disabledClass}`}\n              disabled={disabled}\n              id={id}\n              name={name}\n              {...rest}\n            />\n          ),\n          select: (\n            <Field\n              {...rest}\n              id={id}\n              name={name}\n              className={`usa-select ${disabledClass}`}\n              component=\"select\"\n              defaultValue=\"\"\n            >\n              <option value=\"\">-Select-</option>\n              {choices.map((choice) => (\n                <option value={choice} key={choice}>\n                  {choice}\n                </option>\n              ))}\n            </Field>\n          ),\n          radio: (\n            <div>\n              <Field {...rest} id={id} name={name} className=\"usa-radio__input\" component=\"radio\" />\n              <label className=\"usa-radio__label\" htmlFor={id}>\n                {label}\n              </label>\n            </div>\n          ),\n          date: (\n            <div>\n              <input\n                {...rest}\n                id={id}\n                name={name}\n                className={`usa-input ${disabledClass}`}\n                disabled={disabled}\n              />\n            </div>\n          ),\n        }[type]\n      }\n\n      {children}\n    </div>\n  );\n};\n\nWrappedField.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired, // TODO should be array of possible types'\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.arrayOf(PropTypes.element), // TODO array of els\n  helptext: PropTypes.oneOfType([PropTypes.element, PropTypes.string]), // TODO can be string, HelpText, <p>, etc\n  infoText: PropTypes.oneOfType([PropTypes.element, PropTypes.string]), // TODO can be string, el, etc\n};\n\nexport default WrappedField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldArray } from 'formik';\nimport ReactTags from 'react-tag-autocomplete';\nimport './index.css';\n\nconst TagsAutocomplete = (props) => {\n  const { tags, name, helptext } = props;\n\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className=\"react-tags-input grid-col-12\">\n          <div id=\"tags-error\" className=\"error-msg hidden\" type=\"string\" placeholder=\"\" value=\"\">\n            Tags are required\n          </div>\n          {helptext}\n          <ReactTags\n            tags={tags}\n            suggestions={[]}\n            allowNew\n            ref={React.createRef()}\n            onAddition={arrayHelpers.push}\n            onDelete={arrayHelpers.remove}\n            className=\"usa-input\"\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nTagsAutocomplete.propTypes = {\n  tags: PropTypes.any, // eslint-disable-line\n  helptext: PropTypes.any, // eslint-disable-line\n  name: PropTypes.string.isRequired,\n};\n\nexport default TagsAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HelpText = (props) => {\n  const { children } = props;\n  return <p className=\"usa-helptext\">{children}</p>;\n};\n\nHelpText.propTypes = {\n  children: PropTypes.any, // eslint-disable-line\n};\n\nexport default HelpText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Radio = ({ label, selected, value, styleClass, id, name, handleRadio }) => {\n  return (\n    <div className={`form-group ${styleClass}`}>\n      <input\n        type=\"radio\"\n        className=\"usa-radio__input\"\n        value={value}\n        defaultChecked={selected}\n        onChange={handleRadio}\n        name={name}\n        id={id}\n      />\n\n      <label className=\"usa-radio__label\" htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nRadio.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  handleRadio: PropTypes.func.isRequired,\n  styleClass: PropTypes.string,\n  value: PropTypes.string,\n};\n\nRadio.defaultProps = {\n  styleClass: '',\n};\n\nexport default Radio;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport WrappedField from '../WrappedField';\nimport TagsAutocomplete from '../TagsAutocomplete';\nimport { ReactComponent as Info } from '../../img/info.svg';\nimport HelpText from '../HelpText';\nimport Radio from '../Radio';\n\nconst RequiredMetadata = (props) => {\n  const { values, currentStep, apiUrl, apiKey } = props;\n\n  // RADIO / SELECT Values\n  const [rights, setRights] = useState(values.rights);\n  const [license, setLicense] = useState(values.license);\n  const [spatial, setSpatial] = useState(values.spatial);\n  const [temporal, setTemporal] = useState(values.temporal);\n  const [urlDisabled, setUrlDisabled] = useState(true);\n  const [toolTipShown, setToolTipShown] = useState(false);\n  // eslint-disable-next-line\n  const toggleToolTip = () => setToolTipShown(toolTipShown ? false : true);\n\n  const urlify = (text) => {\n    return text ? text.replace(/\\s+/g, '-').toLowerCase() : '';\n  };\n\n  const helpTextify = (text) => {\n    return <HelpText>{text}</HelpText>;\n  };\n\n  const baseUrl = () => `${apiUrl.replace('api/3/action/', '')}dataset/`;\n\n  if (currentStep !== 1) {\n    // Prop: The current step\n    return null;\n  }\n\n  const helpTexts = {\n    title: (\n      <HelpText>\n        Use <a href=\"https://plainlanguage.gov/\">everyday language</a> to make the dataset easy to\n        find and understand\n      </HelpText>\n    ),\n    description: (\n      <HelpText>\n        Write a description (like an abstract) with enough detail to help a user quickly decide if\n        the asset is of interest. You can use{' '}\n        <a href=\"https://www.markdownguide.org/basic-syntax/\">Markdown Formatting</a> here.\n      </HelpText>\n    ),\n    select: (\n      <HelpText>\n        If you do not see the Publisher for your dataset listed, please contact{' '}\n        <a href=\"mailto:inventory-help@gsa.gov\">inventory-help@gsa.gov</a> for further assistance.\n        Start typing to add tags.\n      </HelpText>\n    ),\n  };\n\n  return (\n    <div className=\"usa-form-custom\">\n      <section id=\"section-basic-mega-menu\" className=\"site-component-section\">\n        <h1 className=\"usite-page-title\" id=\"basic-mega-menu\">\n          Required Metadata\n        </h1>\n        <p className=\"site-text-intro\">\n          The following fields are required metadata for each dataset in an agency’s inventory (\n          <a href=\"https://www.congress.gov/115/plaws/publ435/PLAW-115publ435.pdf\">\n            per Section 202 of the OPEN Government Data Act)\n          </a>{' '}\n          For more information about the form fields, consult the\n          <a href=\"https://resources.data.gov/resources/dcat-us/\">DCAT-US Schema.</a>\n        </p>\n      </section>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Title\"\n            name=\"title\"\n            type=\"string\"\n            placeholder=\"\"\n            helptext={helpTexts.title}\n            value={values.title}\n            required\n          />\n\n          <div>\n            <WrappedField\n              name=\"url\"\n              type=\"string\"\n              style={{ display: urlDisabled ? 'none' : 'inline' }}\n              value={values.url || `${baseUrl()}${urlify(values.title)}`}\n            />\n            <span className=\"dataset_url\" style={{ display: urlDisabled ? 'inline' : 'none' }}>\n              {`${baseUrl()}${urlify(values.title)}`}\n            </span>\n\n            <button\n              type=\"button\"\n              className=\"usa-button dataset_url_edit\"\n              style={{ display: urlDisabled ? 'inline' : 'none' }}\n              onClick={() => {\n                setUrlDisabled(false);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Description\"\n          name=\"description\"\n          type=\"string\"\n          component=\"textarea\"\n          rows=\"6\"\n          helptext={helpTexts.description}\n          value={values.description}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <span className=\"usa-label\">Tags*</span>\n        <TagsAutocomplete\n          id=\"tags-autocomplete-input\"\n          tags={values.tags}\n          apiUrl={apiUrl}\n          apiKey={apiKey}\n          name=\"tags\"\n          titleField=\"name\"\n          required\n          placeholderText=\"Start typing to search\"\n          helptext={helpTextify(\n            'Use both technical and non-technical terms to help users find your dataset.'\n          )}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Publisher\"\n          name=\"publisher\"\n          type=\"select\"\n          choices={['Publisher 1 ', 'Publisher 2', 'Publisher 3', 'Publisher 4']}\n          required\n          className=\"error-msg\"\n          helptext={helpTexts.select}\n          infoText=\"The publishing entity (e.g. your agency) and optionally their parent organization(s).\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Sub Agency\"\n          name=\"subagency\"\n          type=\"select\"\n          choices={['Sub Agency 1 ', 'Sub Agency 2', 'Sub Agency 3', 'Sub-Agency 4']}\n          className=\"error-msg\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Contact Name\"\n          name=\"contactPoint\"\n          type=\"string\"\n          required\n          infoText=\"This should be the person who can best answer or triage questions about this dataset, either on the metadata or the substance of the data resources.\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField label=\"Contact Email\" name=\"contactEmail\" type=\"string\" required />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Unique ID\"\n          name=\"identifier\"\n          type=\"string\"\n          required\n          infoText=\"This is the ID number or code used within your agency to differentiate this dataset from other datasets.\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Public Access level\"\n          name=\"accessLevel\"\n          type=\"select\"\n          choices={['public', 'restricted public', 'non-public']}\n          className=\"error-msg\"\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Meets Agency Data Quality\"\n          name=\"dataQuality\"\n          type=\"select\"\n          choices={['Yes', 'No']}\n          className=\"error-msg\"\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"License\"\n          name=\"license\"\n          type=\"select\"\n          choices={['MIT', 'Open Source License', 'Others']}\n          className=\"error-msg\"\n          value={license}\n          onChange={(e) => setLicense(e.target.value)}\n          required\n        />\n        <WrappedField\n          name=\"license_others\"\n          type=\"string\"\n          helptext={helpTextify(\n            `If you selected “Other”, please specify the name of your License*'`\n          )}\n          disabled={license !== 'Others'}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <span className=\"usa-label pb-sm\">Rights*</span>\n        <Radio\n          label=\"My dataset is public\"\n          name=\"rights\"\n          value={rights}\n          selected={!!rights}\n          handleRadio={() => {\n            setRights(true);\n          }}\n          id=\"rights_option_1\"\n        />\n        <Radio\n          label=\"My dataset is not public\"\n          name=\"rights\"\n          value={rights}\n          selected={!rights}\n          handleRadio={() => {\n            setRights(false);\n          }}\n          id=\"rights_option_2\"\n        />\n        <WrappedField\n          name=\"rights_desc\"\n          type=\"string\"\n          value={values.rights_desc}\n          helptext={helpTextify(\n            'If your dataset is not public, please add an explanation of rights and feel free to include any instructions on restrictions, or how to access a restricted file (max 255 characters)*'\n          )}\n          disabled={!!rights}\n        />\n      </div>\n\n      <div className=\"row\">\n        <span className=\"usa-label pb-sm\">Relevant Location*</span>\n        <Radio\n          label=\"My dataset does not have a spatial component\"\n          name=\"spatial\"\n          value={spatial}\n          selected={!spatial}\n          handleRadio={() => setSpatial(false)}\n          id=\"spatial_option_1\"\n        />\n        <Radio\n          label=\"My dataset does have a spatial component\"\n          name=\"spatial\"\n          value={spatial}\n          selected={!!spatial}\n          handleRadio={() => setSpatial(true)}\n          id=\"spatial_option_2\"\n        />\n        <WrappedField\n          name=\"spatial_location_desc\"\n          type=\"string\"\n          value={values.spatial_location_desc}\n          helptext={helpTextify(\n            'If your dataset has a spatial component, please provide location such as place name or latitude/longitude pairs above*'\n          )}\n          disabled={!spatial}\n        />\n      </div>\n\n      <div className=\"row\">\n        <span className=\"usa-label pb-sm\">\n          Temporal*\n          <div className={`tooltip ${toolTipShown ? 'show' : ''}`}>\n            <Info\n              height=\"20px\"\n              width=\"20px\"\n              style={{ marginLeft: '.5em' }}\n              onClick={() => toggleToolTip()}\n            />\n            <span className=\"tooltiptext\">\n              <span\n                tabIndex={0}\n                className=\"close\"\n                onClick={() => setToolTipShown(false)}\n                role=\"button\"\n                onKeyDown={() => setToolTipShown(false)}\n              >\n                <span className=\"close-tag\">&times;</span>\n              </span>\n              <h3>Temporal</h3>\n              <p>\n                For example, for a 2010 Census dataset, the temporal extent would cover a period of\n                time beginning 2000-04-02 and ending 2010-04-01.\n              </p>\n            </span>\n          </div>\n        </span>{' '}\n        <br />\n        <Radio\n          label=\"My dataset does not have a start and end date for the applicability of data\"\n          name=\"temporal\"\n          value={temporal}\n          selected={!temporal}\n          handleRadio={() => setTemporal(false)}\n          id=\"temporal_option_1\"\n        />\n        <Radio\n          label=\"My dataset has a start and end date for the applicability of data\"\n          name=\"temporal\"\n          value={temporal}\n          selected={!!temporal}\n          handleRadio={() => {\n            setTemporal(true);\n          }}\n          id=\"temporal_option_2\"\n        />\n        <WrappedField\n          name=\"temporal_start_date\"\n          type=\"date\"\n          helptext={helpTextify(\n            'If your dataset has a temporal component, please provide start date for applicability of data above*'\n          )}\n          disabled={!temporal}\n        />\n        <WrappedField\n          name=\"temporal_end_date\"\n          type=\"date\"\n          helptext={helpTextify(\n            'If your dataset has a temporal component, please provide start date for applicability of data above*'\n          )}\n          disabled={!temporal}\n        />\n      </div>\n\n      <div className=\"row align-right\">\n        <button type=\"button\" className=\"usa-button usa-button--outline\">\n          Save as draft\n        </button>\n        <button className=\"usa-button\" type=\"submit\">\n          Save and Continue\n        </button>\n      </div>\n    </div>\n  );\n};\n\nRequiredMetadata.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  values: PropTypes.any, // eslint-disable-line\n  currentStep: PropTypes.number,\n};\n\nexport default RequiredMetadata;\n","export default {\n  title: '',\n  description: '',\n  publisher: '',\n  subagency: '',\n  public_access_level: '',\n  data_quality: '',\n  license: '',\n  license_others: '',\n  identifier: '',\n  rights: 'false',\n  rights_desc: '',\n  spatial: 'false',\n  spatial_location: 'false',\n  temporal: 'false',\n  temporal_start_date: '',\n  temporal_end_date: '',\n  contact_name: '',\n  contact_email: '',\n  unique_id: '',\n  url: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Navigation block for moving between form pages (steps)\n// Step 1 -- Required metadata\n// Step 2 -- Additional metadata\n// Step 3 -- Resource uploads / links\nconst Navigation = (props) => {\n  const { currentStep, handleSteps } = props;\n  return (\n    <div className=\"app_navigation\" id=\"app_navigation\">\n      <div\n        tabIndex=\"0\"\n        role=\"button\"\n        className={`navsec ${currentStep === 0 ? 'active' : ''}`}\n        onClick={() => handleSteps(0)}\n        onKeyDown={() => handleSteps(0)}\n        id=\"nav-item-first\"\n      >\n        <span>Required Metadata</span>\n      </div>\n      <div\n        tabIndex=\"0\"\n        role=\"link\"\n        className={`navsec ${currentStep === 1 ? 'active' : ''}`}\n        onKeyDown={() => {\n          handleSteps(1);\n        }}\n        onClick={() => {\n          handleSteps(1);\n        }}\n      >\n        <span>Additional Metadata</span>\n      </div>\n      <div\n        tabIndex=\"0\"\n        role=\"button\"\n        className={`navsec ${currentStep === 2 ? 'active' : ''}`}\n        onKeyDown={() => {\n          handleSteps(2);\n        }}\n        onClick={() => {\n          handleSteps(2);\n        }}\n      >\n        <span>Resource Upload</span>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  handleSteps: PropTypes.func.isRequired,\n};\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport RequiredMetadata from '../RequiredMetadata';\nimport defaultRequiredValues from '../RequiredMetadata/defaultValues';\nimport Navigation from '../Navigation';\nimport '../../css/custom.css';\nimport '../../css/uswds.css';\n\nconst MetadataForm = (props) => {\n  const { apiUrl, apiKey, ownerOrg } = props;\n\n  // most of the application state is captured here:\n  const [currentStep, setCurrentStep] = useState(0);\n\n  // render metadata form\n  return (\n    <div className=\"grid-container\">\n      <Navigation currentStep={currentStep} handleSteps={setCurrentStep} />\n      <Formik\n        initialValues={defaultRequiredValues}\n        enableReinitialize=\"true\"\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ values, handleSubmit }) => {\n          return (\n            <div>\n              <Form onSubmit={handleSubmit}>\n                {currentStep === 0 && (\n                  <div>\n                    <RequiredMetadata\n                      apiKey={apiKey}\n                      apiUrl={apiUrl}\n                      ownerOrg={ownerOrg}\n                      currentStep={1}\n                      fetchDatasetsOpts=\"false\"\n                      values={values}\n                      errors={{}}\n                    />\n                  </div>\n                )}\n              </Form>\n            </div>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nMetadataForm.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  ownerOrg: PropTypes.string.isRequired,\n};\n\nexport default MetadataForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MetadataForm from './components/MetadataForm';\n\nconst App = (props) => {\n  const { apiUrl, apiKey, ownerOrg } = props;\n\n  return (\n    <div className=\"App\">\n      <MetadataForm apiUrl={apiUrl} apiKey={apiKey} ownerOrg={ownerOrg} />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  ownerOrg: PropTypes.string.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('r');\nlet apiUrl;\nlet apiKey;\nlet ownerOrg;\n\nif (root) {\n  apiUrl = root.getAttribute('data-apiUrl');\n  apiKey = root.getAttribute('data-apiKey');\n  ownerOrg = root.getAttribute('data-ownerOrg');\n} else {\n  // In development, add your own values here\n  apiUrl = 'localhost:5000/api/3/action/';\n  apiKey = '123';\n  ownerOrg = '123';\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App apiUrl={apiUrl} apiKey={apiKey} ownerOrg={ownerOrg} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}