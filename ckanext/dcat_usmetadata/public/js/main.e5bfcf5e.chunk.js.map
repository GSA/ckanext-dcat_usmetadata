{"version":3,"sources":["img/info.svg","components/WrappedField/index.js","api/index.js","components/TagsAutocomplete/index.js","components/HelpText/index.js","components/Radio/index.js","components/RequiredMetadata/index.js","components/RequiredMetadata/defaultValues.js","components/Navigation/index.js","components/AlertBox/index.js","components/MetadataForm/index.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","width","height","ref","ForwardRef","forwardRef","WrappedField","useState","toolTipShown","setToolTipShown","toggleToolTip","name","label","children","helptext","required","disabled","infoText","onClick","rest","choices","type","disabledClass","className","htmlFor","marginLeft","tabIndex","onKeyUp","event","keyCode","role","string","url","select","component","defaultValue","value","map","choice","radio","date","EXTRAS","safeName","split","join","replace","toLowerCase","clone","param","JSON","parse","stringify","encodeExtras","opts","extras","newOpts","decodeExtras","forEach","cur","encodeSupplementalValues","description","notes","license_others","license","rights_desc","rights","spatial_location_desc","spatial","temporal_start_date","start","Date","toISOString","end","temporal_end_date","temporal","decodeSupplementalValues","createDataset","ownerOrg","apiUrl","apiKey","modified","bureauCode","programCode","encoded","owner_org","axios","post","headers","updateDataset","fetchDataset","a","get","res","decoded","data","result","fetchTags","str","row","Promise","reject","createResource","packageId","package_id","upload","mime_type","size","helpers","TagsAutocomplete","tags","suggestions","setSuggestions","render","arrayHelpers","placeholder","allowNew","React","createRef","onAddition","push","onDelete","remove","onInput","q","Api","console","warn","HelpText","Radio","selected","styleClass","handleRadio","defaultChecked","onChange","defaultProps","RequiredMetadata","values","currentStep","setRights","setLicense","setSpatial","setTemporal","urlDisabled","setUrlDisabled","urlify","text","helpTextify","baseUrl","helpTexts","href","display","rows","titleField","placeholderText","e","onKeyDown","publisher","subagency","public_access_level","data_quality","identifier","spatial_location","contact_name","contact_email","unique_id","Navigation","handleSteps","AlertBox","errors","message","heading","formErrors","error","MetadataForm","defaultRequiredValues","requiredValues","setRequiredValues","setCurrentStep","alert","setAlert","initialValues","enableReinitialize","validateOnChange","validateOnBlur","onSubmit","then","window","scrollTo","catch","handleSubmit","fetchDatasetsOpts","App","Boolean","location","hostname","match","root","document","getElementById","getAttribute","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5bfcf5e.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M437.02,74.98C388.667,26.629,324.38,0,256,0S123.333,26.629,74.98,74.98C26.629,123.333,0,187.62,0,256    s26.629,132.667,74.98,181.02C123.333,485.371,187.62,512,256,512s132.667-26.629,181.02-74.98    C485.371,388.667,512,324.38,512,256S485.371,123.333,437.02,74.98z M256,70c30.327,0,55,24.673,55,55c0,30.327-24.673,55-55,55    c-30.327,0-55-24.673-55-55C201,94.673,225.673,70,256,70z M326,420H186v-30h30V240h-30v-30h110v180h30V420z\",\n  fill: \"#0050D8\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgInfo = function SvgInfo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: \"512px\",\n    height: \"512px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgInfo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/info.5e143234.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'formik';\nimport { ReactComponent as Info } from '../../img/info.svg';\nimport '../../css/custom.css';\n\nconst WrappedField = (props) => {\n  const [toolTipShown, setToolTipShown] = useState(false);\n  // eslint-disable-next-line\n  const toggleToolTip = () => setToolTipShown(toolTipShown ? false : true);\n\n  const {\n    name,\n    label,\n    children,\n    helptext,\n    required,\n    id,\n    disabled,\n    infoText,\n    onClick,\n    ...rest\n  } = props;\n\n  const choices = rest.choices || [];\n  const type = rest.type || 'string';\n\n  let disabledClass = '';\n  if (disabled) {\n    disabledClass = 'disabled';\n  } else {\n    disabledClass = '';\n  }\n\n  return (\n    <div>\n      <label className=\"usa-label\" htmlFor={id}>\n        {label}\n        {label && required && <span>*</span>}\n\n        {/* Tooltip */}\n        {infoText && (\n          <div className={`tooltip ${toolTipShown ? 'show' : ''}`}>\n            <Info\n              height=\"20px\"\n              width=\"20px\"\n              style={{ marginLeft: '.5em' }}\n              tabIndex={0}\n              onClick={() => toggleToolTip()}\n              onKeyUp={(event) => {\n                if (event.keyCode === 13) {\n                  toggleToolTip();\n                }\n              }}\n            />\n            <span className=\"tooltiptext\">\n              <span\n                tabIndex={0}\n                className=\"close\"\n                onClick={() => setToolTipShown(false)}\n                role=\"button\"\n                onKeyUp={(event) => {\n                  if (event.keyCode === 13) {\n                    setToolTipShown(false);\n                  }\n                }}\n              >\n                <span className=\"close-tag\">&times;</span>\n              </span>\n              <h3>{label}</h3>\n              <p>{infoText}</p>\n            </span>\n          </div>\n        )}\n      </label>\n\n      <div className={`usa-helptext ${disabledClass}`}>{helptext}</div>\n      {onClick ? (\n        <button className=\"clear-button\" onClick={onClick} type=\"button\">\n          Remove\n        </button>\n      ) : (\n        ''\n      )}\n      {\n        {\n          string: (\n            <Field\n              className={`usa-input ${disabledClass}`}\n              disabled={disabled}\n              id={id}\n              name={name}\n              {...rest}\n            />\n          ),\n          url: (\n            <Field\n              className={`usa-input ${disabledClass}`}\n              disabled={disabled}\n              id={id}\n              name={name}\n              {...rest}\n            />\n          ),\n          select: (\n            <Field\n              {...rest}\n              id={id}\n              name={name}\n              className={`usa-select ${disabledClass}`}\n              component=\"select\"\n              defaultValue=\"\"\n            >\n              <option value=\"\">-Select-</option>\n              {choices.map((choice) => (\n                <option value={choice} key={choice}>\n                  {choice}\n                </option>\n              ))}\n            </Field>\n          ),\n          radio: (\n            <div>\n              <Field {...rest} id={id} name={name} className=\"usa-radio__input\" component=\"radio\" />\n              <label className=\"usa-radio__label\" htmlFor={id}>\n                {label}\n              </label>\n            </div>\n          ),\n          date: (\n            <div>\n              <input\n                {...rest}\n                id={id}\n                name={name}\n                className={`usa-input ${disabledClass}`}\n                disabled={disabled}\n              />\n            </div>\n          ),\n        }[type]\n      }\n\n      {children}\n    </div>\n  );\n};\n\nWrappedField.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired, // TODO should be array of possible types'\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.arrayOf(PropTypes.element), // TODO array of els\n  helptext: PropTypes.oneOfType([PropTypes.element, PropTypes.string]), // TODO can be string, HelpText, <p>, etc\n  infoText: PropTypes.oneOfType([PropTypes.element, PropTypes.string]), // TODO can be string, el, etc\n};\n\nexport default WrappedField;\n","import axios from 'axios';\n\nconst EXTRAS = [\n  'accessLevel',\n  'accrualPeriodicity',\n  'bureauCode',\n  'category',\n  'contactEmail',\n  'contactPoint',\n  'dataQuality',\n  'dataLevel',\n  'describedBy',\n  'describedByType',\n  'frequency',\n  'homePage',\n  'identifier',\n  'isPartOf',\n  'issued',\n  'landingPage',\n  'language',\n  'license',\n  'master',\n  'organization',\n  'publisher',\n  'primaryITInvestmentUIIUSG',\n  'programCode',\n  'references',\n  'rights',\n  'spatial',\n  'subagency',\n  'systemOfRecordsUSG',\n  'temporal',\n  'theme',\n];\n/**\n * HELPERS\n */\nconst safeName = (name) => name.split(' ').join('_').replace(/\\W/g, '').toLowerCase();\nconst clone = (param) => JSON.parse(JSON.stringify(param));\n\n/**\n * Encode extras for CKAN 2.8.2 Groups format\n */\nconst encodeExtras = (opts) => {\n  const newOpts = clone(opts);\n\n  let extras;\n  if (opts) {\n    extras = EXTRAS.map((key) => {\n      return {\n        key,\n        value: opts[key] || '',\n      };\n    });\n  } else {\n    extras = [{}];\n  }\n\n  newOpts.extras = extras;\n  return newOpts;\n};\n\n/**\n * Decode extras from CKAN 2.8.2 Groups format\n */\nconst decodeExtras = (opts) => {\n  const newOpts = clone(opts);\n  newOpts.extras.forEach((cur) => {\n    newOpts[cur.key] = cur.value;\n  });\n  return newOpts;\n};\n\nconst encodeSupplementalValues = (opts) => {\n  const newOpts = clone(opts);\n\n  if (opts.description) {\n    newOpts.notes = opts.description;\n  }\n\n  if (opts.license_others) {\n    newOpts.license = opts.license_others;\n    delete newOpts.license_others;\n  }\n\n  if (opts.rights_desc) {\n    newOpts.rights = opts.rights_desc;\n    delete newOpts.rights_desc;\n  }\n\n  if (opts.spatial_location_desc) {\n    newOpts.spatial = opts.spatial_location_desc;\n    delete newOpts.spatial_location_desc;\n  }\n\n  if (opts.temporal_start_date) {\n    const start = new Date(opts.temporal_start_date).toISOString();\n    const end = new Date(opts.temporal_end_date).toISOString();\n    newOpts.temporal = `${start}/${end}`;\n    delete newOpts.temporal_start_date;\n    delete newOpts.temporal_end_date;\n  }\n\n  return newOpts;\n};\n\nconst decodeSupplementalValues = (opts) => {\n  const newOpts = clone(opts);\n\n  if (opts.license) {\n    newOpts.license_others = opts.license;\n    newOpts.license = 'Others';\n  }\n\n  if (opts.rights) {\n    newOpts.rights_desc = opts.rights;\n    newOpts.rights = 'false';\n  }\n\n  if (opts.spatial) {\n    newOpts.spatial_location_desc = opts.spatial;\n    newOpts.spatial = true;\n  }\n\n  if (opts.temporal) {\n    [newOpts.temporal_start_date, newOpts.temporal_end_date] = opts.temporal.split('/');\n    newOpts.temporal = 'true';\n  }\n\n  return newOpts;\n};\n\n/**\n * API CALLS\n */\n\nconst createDataset = (ownerOrg, opts, apiUrl, apiKey) => {\n  const newOpts = clone(opts);\n  newOpts.modified = new Date();\n  newOpts.notes = opts.description; // TODO not sure what notes is supposed to be\n\n  // TODO where do we get these?\n  newOpts.bureauCode = '015:11';\n  newOpts.programCode = '015:001';\n\n  const encoded = encodeExtras(encodeSupplementalValues(opts));\n  encoded.owner_org = ownerOrg;\n  encoded.name = safeName(opts.title);\n  encoded.url = opts.url;\n  return axios.post(`${apiUrl}package_create`, encoded, {\n    headers: {\n      'X-CKAN-API-Key': apiKey,\n    },\n  });\n};\n\nconst createResource = (packageId, opts, apiUrl, apiKey) => {\n  const newOpts = clone(opts);\n  newOpts.package_id = packageId;\n  if (opts.upload) {\n    newOpts.mime_type = opts.upload.type;\n    newOpts.size = opts.upload.size;\n  }\n  return axios.post(`${apiUrl}resource_create`, opts, {\n    headers: {\n      'X-CKAN-API-Key': apiKey,\n    },\n  });\n};\n\nconst fetchDataset = async (id, apiUrl, apiKey) => {\n  try {\n    const res = await axios.get(`${apiUrl}package_show?id=${id}`, {\n      headers: {\n        'X-CKAN-API-Key': apiKey,\n      },\n    });\n    const decoded = decodeSupplementalValues(decodeExtras(res.data.result));\n    res.data.result = decoded;\n    return res;\n  } catch (e) {\n    return e;\n  }\n};\n\nconst updateDataset = (id, opts, apiUrl, apiKey) => {\n  const encoded = encodeExtras(encodeSupplementalValues(opts));\n  encoded.id = id;\n\n  return axios.post(`${apiUrl}package_update`, encoded, {\n    headers: {\n      'X-CKAN-API-Key': apiKey,\n    },\n  });\n};\n\nconst fetchTags = async (str, apiUrl, apiKey) => {\n  try {\n    const url = `${apiUrl}tag_list?query=${str}`;\n    const res = await axios.get(url, {\n      headers: {\n        'X-CKAN-API-Key': apiKey,\n      },\n    });\n    return res.data.result.map((row, i) => ({ id: i, name: row }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nexport default {\n  createDataset,\n  updateDataset,\n  fetchDataset,\n  fetchTags,\n  createResource,\n  helpers: {\n    encodeExtras,\n    decodeExtras,\n    encodeSupplementalValues,\n    decodeSupplementalValues,\n    clone,\n    safeName,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldArray } from 'formik';\nimport ReactTags from 'react-tag-autocomplete';\nimport Api from '../../api';\nimport './index.css';\n\nconst TagsAutocomplete = (props) => {\n  const { tags, name, helptext, apiUrl, apiKey } = props;\n  const [suggestions, setSuggestions] = useState([]);\n\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className=\"react-tags-input grid-col-12\">\n          <div id=\"tags-error\" className=\"error-msg hidden\" type=\"string\" placeholder=\"\" value=\"\">\n            Tags are required\n          </div>\n          {helptext}\n          <ReactTags\n            tags={tags}\n            suggestions={suggestions}\n            allowNew\n            ref={React.createRef()}\n            onAddition={arrayHelpers.push}\n            onDelete={arrayHelpers.remove}\n            className=\"usa-input\"\n            onInput={async (q) => {\n              try {\n                const res = await Api.fetchTags(q, apiUrl, apiKey);\n                setSuggestions(res);\n              } catch (e) {\n                console.warn('Unable to fetch tags', e); // eslint-disable-line no-console\n              }\n            }}\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nTagsAutocomplete.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tags: PropTypes.any, // eslint-disable-line\n  helptext: PropTypes.any, // eslint-disable-line\n};\n\nexport default TagsAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HelpText = (props) => {\n  const { children } = props;\n  return <p className=\"usa-helptext\">{children}</p>;\n};\n\nHelpText.propTypes = {\n  children: PropTypes.any, // eslint-disable-line\n};\n\nexport default HelpText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Radio = ({ label, selected, value, styleClass, id, name, handleRadio }) => {\n  return (\n    <div className={`form-group ${styleClass}`}>\n      <input\n        type=\"radio\"\n        className=\"usa-radio__input\"\n        value={value}\n        defaultChecked={selected}\n        onChange={handleRadio}\n        name={name}\n        id={id}\n      />\n\n      <label className=\"usa-radio__label\" htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nRadio.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  handleRadio: PropTypes.func.isRequired,\n  styleClass: PropTypes.string,\n  value: PropTypes.string,\n};\n\nRadio.defaultProps = {\n  styleClass: '',\n};\n\nexport default Radio;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport WrappedField from '../WrappedField';\nimport TagsAutocomplete from '../TagsAutocomplete';\nimport { ReactComponent as Info } from '../../img/info.svg';\nimport HelpText from '../HelpText';\nimport Radio from '../Radio';\n\nconst RequiredMetadata = (props) => {\n  const { values, currentStep, apiUrl, apiKey } = props;\n\n  // RADIO / SELECT Values\n  const [rights, setRights] = useState(values.rights);\n  const [license, setLicense] = useState(values.license);\n  const [spatial, setSpatial] = useState(values.spatial);\n  const [temporal, setTemporal] = useState(values.temporal);\n  const [urlDisabled, setUrlDisabled] = useState(true);\n  const [toolTipShown, setToolTipShown] = useState(false);\n  // eslint-disable-next-line\n  const toggleToolTip = () => setToolTipShown(toolTipShown ? false : true);\n\n  const urlify = (text) => {\n    return text ? text.replace(/\\s+/g, '-').toLowerCase() : '';\n  };\n\n  const helpTextify = (text) => {\n    return <HelpText>{text}</HelpText>;\n  };\n\n  const baseUrl = () => `${apiUrl.replace('api/3/action/', '')}dataset/`;\n\n  if (currentStep !== 1) {\n    // Prop: The current step\n    return null;\n  }\n\n  const helpTexts = {\n    title: (\n      <HelpText>\n        Use <a href=\"https://plainlanguage.gov/\">everyday language</a> to make the dataset easy to\n        find and understand\n      </HelpText>\n    ),\n    description: (\n      <HelpText>\n        Write a description (like an abstract) with enough detail to help a user quickly decide if\n        the asset is of interest. You can use{' '}\n        <a href=\"https://www.markdownguide.org/basic-syntax/\">Markdown Formatting</a> here.\n      </HelpText>\n    ),\n    select: (\n      <HelpText>\n        If you do not see the Publisher for your dataset listed, please contact{' '}\n        <a href=\"mailto:inventory-help@gsa.gov\">inventory-help@gsa.gov</a> for further assistance.\n        Start typing to add tags.\n      </HelpText>\n    ),\n  };\n\n  return (\n    <div className=\"usa-form-custom\">\n      <section id=\"section-basic-mega-menu\" className=\"site-component-section\">\n        <h1 className=\"usite-page-title\" id=\"basic-mega-menu\">\n          Required Metadata\n        </h1>\n        <p className=\"site-text-intro\">\n          The following fields are required metadata for each dataset in an agency’s inventory (\n          <a href=\"https://www.congress.gov/115/plaws/publ435/PLAW-115publ435.pdf\">\n            per Section 202 of the OPEN Government Data Act)\n          </a>{' '}\n          For more information about the form fields, consult the\n          <a href=\"https://resources.data.gov/resources/dcat-us/\">DCAT-US Schema.</a>\n        </p>\n      </section>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Title\"\n            name=\"title\"\n            type=\"string\"\n            placeholder=\"\"\n            helptext={helpTexts.title}\n            value={values.title}\n            required\n          />\n\n          <div>\n            <WrappedField\n              name=\"url\"\n              type=\"string\"\n              style={{ display: urlDisabled ? 'none' : 'inline' }}\n              value={values.url || `${baseUrl()}${urlify(values.title)}`}\n            />\n            <span className=\"dataset_url\" style={{ display: urlDisabled ? 'inline' : 'none' }}>\n              {`${baseUrl()}${urlify(values.title)}`}\n            </span>\n\n            <button\n              type=\"button\"\n              className=\"usa-button dataset_url_edit\"\n              style={{ display: urlDisabled ? 'inline' : 'none' }}\n              onClick={() => {\n                setUrlDisabled(false);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Description\"\n          name=\"description\"\n          type=\"string\"\n          component=\"textarea\"\n          rows=\"6\"\n          helptext={helpTexts.description}\n          value={values.description}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <span className=\"usa-label\">Tags*</span>\n        <TagsAutocomplete\n          id=\"tags-autocomplete-input\"\n          tags={values.tags}\n          apiUrl={apiUrl}\n          apiKey={apiKey}\n          name=\"tags\"\n          titleField=\"name\"\n          required\n          placeholderText=\"Start typing to search\"\n          helptext={helpTextify(\n            'Use both technical and non-technical terms to help users find your dataset.'\n          )}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Publisher\"\n          name=\"publisher\"\n          type=\"select\"\n          choices={['Publisher 1 ', 'Publisher 2', 'Publisher 3', 'Publisher 4']}\n          required\n          className=\"error-msg\"\n          helptext={helpTexts.select}\n          infoText=\"The publishing entity (e.g. your agency) and optionally their parent organization(s).\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Sub Agency\"\n          name=\"subagency\"\n          type=\"select\"\n          choices={['Sub Agency 1 ', 'Sub Agency 2', 'Sub Agency 3', 'Sub-Agency 4']}\n          className=\"error-msg\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Contact Name\"\n          name=\"contactPoint\"\n          type=\"string\"\n          required\n          infoText=\"This should be the person who can best answer or triage questions about this dataset, either on the metadata or the substance of the data resources.\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField label=\"Contact Email\" name=\"contactEmail\" type=\"string\" required />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Unique ID\"\n          name=\"identifier\"\n          type=\"string\"\n          required\n          infoText=\"This is the ID number or code used within your agency to differentiate this dataset from other datasets.\"\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Public Access level\"\n          name=\"accessLevel\"\n          type=\"select\"\n          choices={['public', 'restricted public', 'non-public']}\n          className=\"error-msg\"\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Meets Agency Data Quality\"\n          name=\"dataQuality\"\n          type=\"select\"\n          choices={['Yes', 'No']}\n          className=\"error-msg\"\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"License\"\n          name=\"license\"\n          type=\"select\"\n          choices={['MIT', 'Open Source License', 'Others']}\n          className=\"error-msg\"\n          value={license}\n          onChange={(e) => setLicense(e.target.value)}\n          required\n        />\n        <WrappedField\n          name=\"license_others\"\n          type=\"string\"\n          helptext={helpTextify(\n            `If you selected “Other”, please specify the name of your License*'`\n          )}\n          disabled={license !== 'Others'}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <Radio\n          label=\"My dataset is public\"\n          name=\"rights\"\n          value={rights}\n          selected={!!rights}\n          handleRadio={() => {\n            setRights(true);\n          }}\n          id=\"rights_option_1\"\n        />\n        <Radio\n          label=\"My dataset is not public\"\n          name=\"rights\"\n          value={rights}\n          selected={!rights}\n          handleRadio={() => {\n            setRights(false);\n          }}\n          id=\"rights_option_2\"\n        />\n        <WrappedField\n          name=\"rights_desc\"\n          type=\"string\"\n          value={values.rights_desc}\n          helptext={helpTextify(\n            'If your dataset is not public, please add an explanation of rights and feel free to include any instructions on restrictions, or how to access a restricted file (max 255 characters)*'\n          )}\n          disabled={!!rights}\n        />\n      </div>\n\n      <div className=\"row\">\n        <span className=\"usa-label\">Relevant Location*</span> <br />\n        <Radio\n          label=\"My dataset does not have a spatial component\"\n          name=\"spatial\"\n          value={spatial}\n          selected={!spatial}\n          handleRadio={() => setSpatial(false)}\n          id=\"spatial_option_1\"\n        />\n        <Radio\n          label=\"My dataset does have a spatial component\"\n          name=\"spatial\"\n          value={spatial}\n          selected={!!spatial}\n          handleRadio={() => setSpatial(true)}\n          id=\"spatial_option_2\"\n        />\n        <WrappedField\n          name=\"spatial_location_desc\"\n          type=\"string\"\n          value={values.spatial_location_desc}\n          helptext={helpTextify(\n            'If your dataset has a spatial component, please provide location such as place name or latitude/longitude pairs above*'\n          )}\n          disabled={!spatial}\n        />\n      </div>\n\n      <div className=\"row\">\n        <span className=\"usa-label\">\n          Temporal*\n          <div className={`tooltip ${toolTipShown ? 'show' : ''}`}>\n            <Info\n              height=\"20px\"\n              width=\"20px\"\n              style={{ marginLeft: '.5em' }}\n              onClick={() => toggleToolTip()}\n            />\n            <span className=\"tooltiptext\">\n              <span\n                tabIndex={0}\n                className=\"close\"\n                onClick={() => setToolTipShown(false)}\n                role=\"button\"\n                onKeyDown={() => setToolTipShown(false)}\n              >\n                <span className=\"close-tag\">&times;</span>\n              </span>\n              <h3>Temporal</h3>\n              <p>\n                For example, for a 2010 Census dataset, the temporal extent would cover a period of\n                time beginning 2000-04-02 and ending 2010-04-01.\n              </p>\n            </span>\n          </div>\n        </span>{' '}\n        <br />\n        <Radio\n          label=\"My dataset does not have a start and end date for the applicability of data\"\n          name=\"temporal\"\n          value={temporal}\n          selected={!temporal}\n          handleRadio={() => setTemporal(false)}\n          id=\"temporal_option_1\"\n        />\n        <Radio\n          label=\"My dataset has a start and end date for the applicability of data\"\n          name=\"temporal\"\n          value={temporal}\n          selected={!!temporal}\n          handleRadio={() => {\n            setTemporal(true);\n          }}\n          id=\"temporal_option_2\"\n        />\n        <WrappedField\n          name=\"temporal_start_date\"\n          type=\"date\"\n          helptext={helpTextify(\n            'If your dataset has a temporal component, please provide start date for applicability of data above*'\n          )}\n          disabled={!temporal}\n        />\n        <WrappedField\n          name=\"temporal_end_date\"\n          type=\"date\"\n          helptext={helpTextify(\n            'If your dataset has a temporal component, please provide start date for applicability of data above*'\n          )}\n          disabled={!temporal}\n        />\n      </div>\n\n      <div className=\"row\">\n        <button type=\"button\" className=\"usa-button usa-button--outline\">\n          Save as draft\n        </button>\n        <button className=\"usa-button\" type=\"submit\">\n          Save and Continue\n        </button>\n      </div>\n    </div>\n  );\n};\n\nRequiredMetadata.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  values: PropTypes.any, // eslint-disable-line\n  currentStep: PropTypes.number,\n};\n\nexport default RequiredMetadata;\n","export default {\n  title: '',\n  description: '',\n  publisher: '',\n  subagency: '',\n  public_access_level: '',\n  data_quality: '',\n  license: '',\n  license_others: '',\n  identifier: '',\n  rights: 'false',\n  rights_desc: '',\n  spatial: 'false',\n  spatial_location: 'false',\n  temporal: 'false',\n  temporal_start_date: '',\n  temporal_end_date: '',\n  contact_name: '',\n  contact_email: '',\n  unique_id: '',\n  url: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Navigation block for moving between form pages (steps)\n// Step 1 -- Required metadata\n// Step 2 -- Additional metadata\n// Step 3 -- Resource uploads / links\nconst Navigation = (props) => {\n  const { currentStep, handleSteps } = props;\n  return (\n    <div className=\"app_navigation\" id=\"app_navigation\">\n      <div\n        tabIndex=\"0\"\n        role=\"button\"\n        className={`navsec ${currentStep === 0 ? 'active' : ''}`}\n        onClick={() => handleSteps(0)}\n        onKeyDown={() => handleSteps(0)}\n        id=\"nav-item-first\"\n      >\n        <span>Required Metadata</span>\n      </div>\n      <div\n        tabIndex=\"0\"\n        role=\"link\"\n        className={`navsec ${currentStep === 1 ? 'active' : ''}`}\n        onKeyDown={() => {\n          handleSteps(1);\n        }}\n        onClick={() => {\n          handleSteps(1);\n        }}\n      >\n        <span>Additional Metadata</span>\n      </div>\n      <div\n        tabIndex=\"0\"\n        role=\"button\"\n        className={`navsec ${currentStep === 2 ? 'active' : ''}`}\n        onKeyDown={() => {\n          handleSteps(2);\n        }}\n        onClick={() => {\n          handleSteps(2);\n        }}\n      >\n        <span>Resource Upload</span>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  handleSteps: PropTypes.func.isRequired,\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../css/uswds.css';\n\nconst AlertBox = (props) => {\n  const { type, errors, message, heading } = props;\n  const formErrors =\n    errors &&\n    Object.keys(errors).map((error) => (\n      <p key={error}>\n        <b>{error}</b> {errors[error]}\n      </p>\n    ));\n  return (\n    <div className=\"usa-prose\">\n      <div className=\"usa-alert__body\">\n        <div className={`usa-alert usa-alert--${type}`}>\n          <div className=\"icon\" />\n          <div className=\"usa-alert__body\">\n            <h3 className=\"usa-alert__heading\">{heading}</h3>\n            <div className=\"usa-alert__text\">\n              {message}\n              {formErrors}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAlertBox.propTypes = {\n  errors: PropTypes.object, // eslint-disable-line\n  heading: PropTypes.string,\n  message: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default AlertBox;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport RequiredMetadata from '../RequiredMetadata';\nimport defaultRequiredValues from '../RequiredMetadata/defaultValues';\nimport Navigation from '../Navigation';\nimport AlertBox from '../AlertBox';\nimport Api from '../../api';\nimport '../../css/custom.css';\nimport '../../css/uswds.css';\n\nconst MetadataForm = (props) => {\n  const { apiUrl, apiKey, ownerOrg } = props;\n  const [requiredValues, setRequiredValues] = useState(defaultRequiredValues);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [alert, setAlert] = useState();\n\n  // render metadata form\n  return (\n    <div className=\"grid-container\">\n      <Navigation currentStep={currentStep} handleSteps={setCurrentStep} />\n      {alert}\n      <Formik\n        initialValues={requiredValues}\n        enableReinitialize=\"true\"\n        validateOnChange={false}\n        validateOnBlur={false}\n        onSubmit={(values) => {\n          Api.createDataset(ownerOrg, values, apiUrl, apiKey)\n            .then((res) => {\n              setAlert(<AlertBox type=\"success\" heading=\"Dataset updated successfully\" />);\n              setRequiredValues(res);\n              window.scrollTo(0, 0);\n            })\n            .catch((error) => {\n              const message = JSON.stringify(error);\n              setAlert(<AlertBox type=\"error\" heading=\"Error saving metadata\" message={message} />);\n              console.error('CREATE DATASET ERROR', error); // eslint-disable-line\n              window.scrollTo(0, 0);\n            });\n        }}\n      >\n        {({ values, errors, handleSubmit }) => (\n          <div>\n            <Form onSubmit={handleSubmit}>\n              {currentStep === 0 && (\n                <div>\n                  <RequiredMetadata\n                    apiKey={apiKey}\n                    apiUrl={apiUrl}\n                    ownerOrg={ownerOrg}\n                    currentStep={1}\n                    fetchDatasetsOpts=\"false\"\n                    values={values}\n                    errors={errors}\n                  />\n                </div>\n              )}\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nMetadataForm.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  ownerOrg: PropTypes.string.isRequired,\n};\n\nexport default MetadataForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MetadataForm from './components/MetadataForm';\n\nconst App = (props) => {\n  const { apiUrl, apiKey, ownerOrg } = props;\n\n  return (\n    <div className=\"App\">\n      <MetadataForm apiUrl={apiUrl} apiKey={apiKey} ownerOrg={ownerOrg} />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  ownerOrg: PropTypes.string.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\nlet apiUrl;\nlet apiKey;\nlet ownerOrg;\n\nif (root) {\n  apiUrl = root.getAttribute('data-apiUrl');\n  apiKey = root.getAttribute('data-apiKey');\n  ownerOrg = root.getAttribute('data-ownerOrg');\n} else {\n  // In development, add your own values here\n  apiUrl = 'http://localhost:5000/api/3/action/';\n  apiKey = '123';\n  ownerOrg = '123';\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App apiUrl={apiUrl} apiKey={apiKey} ownerOrg={ownerOrg} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}