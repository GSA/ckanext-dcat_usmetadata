{"version":3,"sources":["img/info.svg","components/WrappedField/index.js","api/index.js","components/TagsAutocomplete/index.js","components/HelpText/index.js","components/Radio/index.js","components/RequiredMetadata/index.js","components/RequiredMetadata/validationSchema.js","components/RequiredMetadata/validationLabels.js","components/RequiredMetadata/defaultValues.js","components/AdditionalMetadata/index.js","components/AdditionalMetadata/validationSchema.js","components/ResourceUpload/index.js","components/ResourceUpload/validationSchema.js","components/ResourceUpload/ResourceObject.js","components/Navigation/index.js","components/AlertBox/index.js","components/MetadataForm/index.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","width","height","ref","ForwardRef","forwardRef","WrappedField","useState","toolTipShown","setToolTipShown","toggleToolTip","value","name","label","children","helptext","required","errors","disabled","infoText","onClick","onSelect","rest","formErrors","choices","type","disabledClass","className","htmlFor","marginLeft","tabIndex","onKeyUp","event","keyCode","role","string","url","select","component","map","choice","index","selectWithState","onChange","radio","date","clone","param","JSON","parse","stringify","decodeExtras","opts","newOpts","extras","forEach","cur","encodeSupplementalValues","description","notes","tags","tag_string","reduce","acc","license_others","license_new","access_level_comment","rights_desc","spatial_location_desc","spatial","temporal_start_date","start","Date","toISOString","split","end","temporal_end_date","temporal","decodeSupplementalValues","n","includes","license","createDataset","ownerOrg","apiUrl","apiKey","encoded","slugify","lower","remove","owner_org","modified","bureau_code","program_code","axios","post","headers","then","res","resVals","data","result","updateDataset","bureauCode","programCode","fetchDataset","a","get","decoded","fetchTags","str","row","Promise","reject","createResource","packageId","body","upload","FormData","append","item","package_id","helpers","TagsAutocomplete","suggestions","setSuggestions","render","arrayHelpers","allowNew","React","createRef","onAddition","push","onDelete","onInput","q","Api","console","warn","HelpText","Radio","styleClass","defaultProps","leafPublishers","require","publisher_5","publisher_4","publisher_3","publisher_2","publisher_1","publisher","RequiredMetadata","values","urlDisabled","setUrlDisabled","helpTextify","text","baseUrl","window","location","origin","helpTexts","href","placeholder","display","rows","titleField","placeholderText","rights","e","onKeyDown","yup","shape","contact_name","unique_id","contact_email","email","of","min","max","matches","vocabulary_id","subagency","public_access_level","test","formVals","from","data_quality","spatial_location","languages","theme","describedBy","landingPage","primaryITInvestmentUIIUSG","references","systemOfRecordsUSG","AdditionalMetadata","languageRegSubTag","languageSubTag","state","setState","dataQualityUSG","category","data_dictionary","data_dictionary_type","primary_it_investment_uii","trim","homepage_url","related_documents","deribed_by","described_by_type","system_of_records","ResourceUpload","setFieldValue","submitForm","resource","mimetype","format","linkToDataIsActive","setLinkToDataActive","uploadDataFileIsActive","setUploadDataFileActive","hidden","aria-hidden","currentTarget","files","detectedFormat","slice","savedResources","lastSavedResourceName","Navigation","currentStep","handleSteps","AlertBox","useEffect","scrollTo","message","heading","error","formatErrors","RequiredMetadataLabels","Heading","MetadataForm","datasetId","shouldFetch","setShouldFetch","curDatasetId","setCurDatasetId","defaultRequiredValues","formValues","setFormValues","setCurrentStep","alert","setAlert","apiRes","catch","initialValues","enableReinitialize","validateOnChange","validateOnBlur","validateOnMount","onSubmit","validationSchema","RequiredMetadataSchema","handleSubmit","fetchDatasetsOpts","log","AdditionalMetadataSchema","ResourceObject","publish","resourceMetadataChanged","apiUrlObject","URL","datasetPageUrl","status","replace","ResourceUploadSchema","App","Boolean","hostname","match","root","document","getElementById","getAttribute","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41365a01.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M437.02,74.98C388.667,26.629,324.38,0,256,0S123.333,26.629,74.98,74.98C26.629,123.333,0,187.62,0,256    s26.629,132.667,74.98,181.02C123.333,485.371,187.62,512,256,512s132.667-26.629,181.02-74.98    C485.371,388.667,512,324.38,512,256S485.371,123.333,437.02,74.98z M256,70c30.327,0,55,24.673,55,55c0,30.327-24.673,55-55,55    c-30.327,0-55-24.673-55-55C201,94.673,225.673,70,256,70z M326,420H186v-30h30V240h-30v-30h110v180h30V420z\",\n  fill: \"#0050D8\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgInfo = function SvgInfo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: \"512px\",\n    height: \"512px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgInfo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/info.5e143234.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'formik';\nimport { ReactComponent as Info } from '../../img/info.svg';\nimport '../../css/custom.css';\n\nconst WrappedField = (props) => {\n  const [toolTipShown, setToolTipShown] = useState(false);\n  // eslint-disable-next-line\n  const toggleToolTip = () => setToolTipShown(toolTipShown ? false : true);\n\n  const {\n    value,\n    name,\n    label,\n    children,\n    helptext,\n    required,\n    id,\n    errors,\n    disabled,\n    infoText,\n    onClick,\n    onSelect,\n    ...rest\n  } = props;\n\n  const formErrors = errors || {};\n  const choices = rest.choices || [];\n  const type = rest.type || 'string';\n\n  let disabledClass = '';\n  if (disabled) {\n    disabledClass = 'disabled';\n  } else {\n    disabledClass = '';\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <label className=\"usa-label\" htmlFor={id}>\n        {label}\n        {label && required && <span>*</span>}\n\n        {/* Tooltip */}\n        {infoText && (\n          <div className={`tooltip ${toolTipShown ? 'show' : ''}`}>\n            <Info\n              height=\"20px\"\n              width=\"20px\"\n              style={{ marginLeft: '.5em' }}\n              tabIndex={0}\n              onClick={() => toggleToolTip()}\n              onKeyUp={(event) => {\n                if (event.keyCode === 13) {\n                  toggleToolTip();\n                }\n              }}\n            />\n            <span className=\"tooltiptext\">\n              <span\n                tabIndex={0}\n                className=\"close\"\n                onClick={() => setToolTipShown(false)}\n                role=\"button\"\n                onKeyUp={(event) => {\n                  if (event.keyCode === 13) {\n                    setToolTipShown(false);\n                  }\n                }}\n              >\n                <span className=\"close-tag\">&times;</span>\n              </span>\n              <h3>{label}</h3>\n              <p>{infoText}</p>\n            </span>\n          </div>\n        )}\n      </label>\n\n      {/* Inline Errors */}\n      {formErrors[name] && <span className=\"error-msg\">{formErrors[name]}</span>}\n\n      <div className={`usa-helptext ${disabledClass}`}>{helptext}</div>\n      {onClick ? (\n        <button\n          className=\"clear-button usa-button usa-button--secondary\"\n          onClick={onClick}\n          type=\"button\"\n        >\n          Remove\n        </button>\n      ) : (\n        ''\n      )}\n      {\n        {\n          string: (\n            <Field\n              className={\n                `usa-input ${disabledClass} ` +\n                `${formErrors[name] && 'field-error'} ` +\n                `${onClick && 'has-clear-button'}`\n              }\n              disabled={disabled}\n              id={id}\n              name={name}\n              {...rest}\n            />\n          ),\n          url: (\n            <Field\n              className={`usa-input ${disabledClass} ${onClick && 'has-clear-button'}`}\n              disabled={disabled}\n              id={id}\n              name={name}\n              {...rest}\n            />\n          ),\n          select: (\n            <Field\n              {...rest}\n              id={id}\n              name={name}\n              disabled={disabled}\n              className={`usa-select ${disabledClass} ${formErrors[name] ? 'field-error' : ''}`}\n              component=\"select\"\n            >\n              <option value=\"\">-Select-</option>\n              {/* eslint-disable */}\n              {choices.map((choice, index) => (\n                <option value={choice} key={choice + index}>\n                  {choice}\n                </option>\n              ))}\n              {/* eslint-enable */}\n            </Field>\n          ),\n          selectWithState: (\n            <Field\n              {...rest}\n              id={id}\n              name={name}\n              value={value}\n              onChange={onSelect}\n              disabled={disabled}\n              className={`usa-select ${disabledClass} ${formErrors[name] ? 'field-error' : ''}`}\n              component=\"select\"\n            >\n              <option value=\"\">-Select-</option>\n              {choices.map((choice) => (\n                <option value={choice} key={choice}>\n                  {choice}\n                </option>\n              ))}\n            </Field>\n          ),\n          radio: (\n            <div>\n              <Field {...rest} id={id} name={name} className=\"usa-radio__input\" component=\"radio\" />\n              <label className=\"usa-radio__label\" htmlFor={id}>\n                {label}\n              </label>\n            </div>\n          ),\n          date: (\n            <div>\n              <Field\n                type=\"date\"\n                id={id}\n                name={name}\n                className={`usa-input ${disabledClass}`}\n                disabled={disabled}\n              />\n            </div>\n          ),\n        }[type]\n      }\n\n      {children}\n    </div>\n  );\n};\n\nWrappedField.propTypes = {\n  value: PropTypes.any, // eslint-disable-line\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired, // TODO should be array of possible types'\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  errors: PropTypes.any, // eslint-disable-line\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  onSelect: PropTypes.func,\n  children: PropTypes.arrayOf(PropTypes.element), // TODO array of els\n  helptext: PropTypes.oneOfType([PropTypes.element, PropTypes.string]), // TODO can be string, HelpText, <p>, etc\n  infoText: PropTypes.oneOfType([PropTypes.element, PropTypes.string]), // TODO can be string, el, etc\n};\n\nexport default WrappedField;\n","import axios from 'axios';\nimport slugify from 'slugify';\n\n/**\n * HELPERS\n */\nconst clone = (param) => JSON.parse(JSON.stringify(param));\n\n/**\n * Decode extras from CKAN 2.8.2 Groups format\n */\nconst decodeExtras = (opts) => {\n  const newOpts = clone(opts);\n  newOpts.extras.forEach((cur) => {\n    newOpts[cur.key] = cur.value;\n  });\n  return newOpts;\n};\n\n// encode values from USMetadata format to match form values\nconst encodeSupplementalValues = (opts) => {\n  const newOpts = clone(opts);\n\n  if (opts.description) {\n    newOpts.notes = opts.description;\n  }\n\n  if (opts.tags && opts.tags.length > 0) {\n    newOpts.tag_string = opts.tags.reduce((acc, cur) => {\n      if (acc.length === 0) {\n        return cur.name;\n      }\n      return `${acc}, ${cur.name}`;\n    }, '');\n  }\n\n  if (opts.license_others) {\n    newOpts.license_new = opts.license_others;\n    delete newOpts.license_others;\n  }\n\n  // if access_level_comment is false use provided description\n  if (opts.access_level_comment === 'false' && opts.rights_desc) {\n    newOpts.access_level_comment = opts.rights_desc;\n    delete newOpts.rights_desc;\n  } else {\n    newOpts.access_level_comment = 'true';\n  }\n\n  if (opts.spatial_location_desc) {\n    newOpts.spatial = opts.spatial_location_desc;\n    delete newOpts.spatial_location_desc;\n  }\n\n  if (opts.temporal_start_date) {\n    const start = new Date(opts.temporal_start_date).toISOString().split('T')[0]; // get yyyy-mm-dd from ISO string\n    const end = new Date(opts.temporal_end_date).toISOString().split('T')[0]; // ditto\n    newOpts.temporal = `${start}/${end}`;\n    delete newOpts.temporal_start_date;\n    delete newOpts.temporal_end_date;\n  } else {\n    newOpts.temporal = 'false';\n  }\n\n  return newOpts;\n};\n\n// decode values from USMetadata format to match form values\nconst decodeSupplementalValues = (opts) => {\n  const newOpts = clone(opts);\n  if (opts.tag_string) {\n    newOpts.tags = opts.tag_string.split(',').map((n, i) => ({ id: i, name: n }));\n  }\n\n  if (opts.license_new) {\n    if (['MIT', 'Open Source License'].includes(opts.license_new)) {\n      newOpts.license = opts.license;\n    } else {\n      newOpts.license_others = opts.license_new;\n      newOpts.license = 'Others';\n    }\n  }\n\n  if (opts.access_level_comment !== 'true') {\n    newOpts.rights_desc = opts.access_level_comment;\n    newOpts.access_level_comment = 'false';\n  }\n\n  if (opts.spatial) {\n    newOpts.spatial_location_desc = opts.spatial;\n    newOpts.spatial = true;\n  }\n\n  if (opts.temporal) {\n    [newOpts.temporal_start_date, newOpts.temporal_end_date] = opts.temporal.split('/');\n    newOpts.temporal = 'true';\n  }\n  return newOpts;\n};\n\n/**\n * API CALLS\n */\n\nconst createDataset = (ownerOrg, opts, apiUrl, apiKey) => {\n  const encoded = encodeSupplementalValues(opts);\n  encoded.name = slugify(opts.title, { lower: true, remove: /[*+~.()'\"!:@]/g });\n  encoded.owner_org = ownerOrg;\n  encoded.modified = new Date();\n  encoded.bureau_code = '015:11';\n  encoded.program_code = '015:001';\n  // encoded.temporal = '2020-12-22/2020-12-22'; // todo encode this\n  // encoded.tag_string = 'tag1, tag2, tag3, tag4'; // TODO make tag string\n  encoded.url = opts.url;\n  return axios\n    .post(`${apiUrl}package_create`, encoded, {\n      headers: {\n        'X-CKAN-API-Key': apiKey,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n    .then((res) => {\n      // note that we don't return the axios response, we return the result\n      const resVals = res.data.result;\n      const decoded = decodeSupplementalValues(decodeExtras(resVals));\n      return decoded;\n    });\n};\n\nconst createResource = (packageId, opts, apiUrl, apiKey) => {\n  let body;\n  if (opts.upload) {\n    body = new FormData();\n    body.append('package_id', packageId);\n    Object.keys(opts).forEach((item) => {\n      body.append(item, opts[item]);\n    });\n  } else {\n    body = clone(opts);\n    body.package_id = packageId;\n  }\n\n  return axios.post(`${apiUrl}resource_create`, body, {\n    headers: {\n      'X-CKAN-API-Key': apiKey,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  });\n};\n\nconst fetchDataset = async (id, apiUrl, apiKey) => {\n  return axios\n    .get(`${apiUrl}package_show?id=${id}`, {\n      headers: {\n        'X-CKAN-API-Key': apiKey,\n      },\n    })\n    .then((res) => {\n      // note that we don't return the axios response, we return the result\n      const decoded = decodeSupplementalValues(decodeExtras(res.data.result));\n      decoded.description = decoded.notes;\n      return decoded;\n    });\n};\n\nconst updateDataset = (id, opts, apiUrl, apiKey) => {\n  const encoded = encodeSupplementalValues(opts);\n  encoded.modified = new Date();\n  encoded.notes = opts.description; // TODO not sure what notes is supposed to be\n  encoded.id = id;\n\n  // TODO where do we get these?\n  encoded.bureauCode = '015:11';\n  encoded.programCode = '015:001';\n\n  return axios\n    .post(`${apiUrl}package_update`, encoded, {\n      headers: {\n        'X-CKAN-API-Key': apiKey,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n    .then((res) => {\n      // note that we don't return the axios response, we return the result\n      const resVals = res.data.result;\n      const decoded = decodeSupplementalValues(decodeExtras(resVals));\n      return decoded;\n    });\n};\n\nconst fetchTags = async (str, apiUrl, apiKey) => {\n  try {\n    const url = `${apiUrl}tag_list?query=${str}`;\n    const res = await axios.get(url, {\n      headers: {\n        'X-CKAN-API-Key': apiKey,\n      },\n    });\n    return res.data.result.map((row, i) => ({ id: i, name: row }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nexport default {\n  createDataset,\n  updateDataset,\n  fetchDataset,\n  fetchTags,\n  createResource,\n  helpers: {\n    decodeExtras,\n    clone,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldArray } from 'formik';\nimport ReactTags from 'react-tag-autocomplete';\nimport Api from '../../api';\nimport './index.css';\n\nconst TagsAutocomplete = (props) => {\n  const { tags, name, helptext, apiUrl, apiKey, errors } = props;\n  const [suggestions, setSuggestions] = useState([]);\n\n  return (\n    <FieldArray\n      name={name}\n      render={(arrayHelpers) => (\n        <div className=\"react-tags-input grid-col-12\">\n          {errors[name] && (\n            <span className=\"error-msg\">\n              {errors[name]}\n              <br />\n            </span>\n          )}\n          {helptext}\n          <ReactTags\n            tags={tags}\n            suggestions={suggestions}\n            allowNew\n            ref={React.createRef()}\n            onAddition={arrayHelpers.push}\n            onDelete={arrayHelpers.remove}\n            className=\"usa-input\"\n            onInput={async (q) => {\n              try {\n                const res = await Api.fetchTags(q, apiUrl, apiKey);\n                setSuggestions(res);\n              } catch (e) {\n                console.warn('Unable to fetch tags', e); // eslint-disable-line no-console\n              }\n            }}\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nTagsAutocomplete.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tags: PropTypes.any, // eslint-disable-line\n  helptext: PropTypes.any, // eslint-disable-line\n  errors: PropTypes.any, // eslint-disable-line\n};\n\nexport default TagsAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HelpText = (props) => {\n  const { children } = props;\n  return <span className=\"usa-helptext\">{children}</span>;\n};\n\nHelpText.propTypes = {\n  children: PropTypes.any, // eslint-disable-line\n};\n\nexport default HelpText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'formik';\n\nconst Radio = ({ label, value, styleClass, id, name }) => {\n  return (\n    <div className={`form-group ${styleClass}`}>\n      <Field type=\"radio\" className=\"usa-radio__input\" value={value} name={name} id={id} />\n\n      <label className=\"usa-radio__label\" htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nRadio.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  styleClass: PropTypes.string,\n  value: PropTypes.string,\n};\n\nRadio.defaultProps = {\n  styleClass: '',\n};\n\nexport default Radio;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport slugify from 'slugify';\nimport WrappedField from '../WrappedField';\nimport TagsAutocomplete from '../TagsAutocomplete';\nimport { ReactComponent as Info } from '../../img/info.svg';\nimport HelpText from '../HelpText';\nimport Radio from '../Radio';\n\nconst publishersDictionary = require('./publishers.json');\n\nconst leafPublishers = publishersDictionary.map((item) => {\n  return (\n    item.publisher_5 ||\n    item.publisher_4 ||\n    item.publisher_3 ||\n    item.publisher_2 ||\n    item.publisher_1 ||\n    item.publisher\n  );\n});\n\nconst RequiredMetadata = (props) => {\n  const { values, errors, apiUrl, apiKey } = props;\n\n  // RADIO / SELECT Values\n  const [urlDisabled, setUrlDisabled] = useState(true);\n  const [toolTipShown, setToolTipShown] = useState(false);\n  // eslint-disable-next-line\n  const toggleToolTip = () => setToolTipShown(toolTipShown ? false : true);\n\n  const helpTextify = (text) => {\n    return <HelpText>{text}</HelpText>;\n  };\n  const baseUrl = `${window.location.origin}/dataset/`;\n\n  const helpTexts = {\n    title: (\n      <HelpText>\n        Use <a href=\"https://plainlanguage.gov/\">everyday language</a> to make the dataset easy to\n        find and understand\n      </HelpText>\n    ),\n    description: (\n      <HelpText>\n        Write a description (like an abstract) with enough detail to help a user quickly decide if\n        the asset is of interest. You can use{' '}\n        <a href=\"https://www.markdownguide.org/basic-syntax/\">Markdown Formatting</a> here.\n      </HelpText>\n    ),\n    select: (\n      <HelpText>\n        If you do not see the Publisher for your dataset listed, please contact{' '}\n        <a href=\"mailto:inventory-help@gsa.gov\">inventory-help@gsa.gov</a> for further assistance.\n      </HelpText>\n    ),\n  };\n\n  return (\n    <div className=\"usa-form-custom\">\n      <section id=\"section-basic-mega-menu\" className=\"site-component-section\">\n        <p className=\"site-text-intro\">\n          The following fields are required metadata for each dataset in an agency’s inventory (\n          <a href=\"https://www.congress.gov/115/plaws/publ435/PLAW-115publ435.pdf\">\n            per Section 202 of the OPEN Government Data Act)\n          </a>{' '}\n          For more information about the form fields, consult the\n          <a href=\"https://resources.data.gov/resources/dcat-us/\">DCAT-US Schema.</a>\n        </p>\n      </section>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Title\"\n            name=\"title\"\n            type=\"string\"\n            placeholder=\"\"\n            helptext={helpTexts.title}\n            value={values.title}\n            errors={errors}\n            required\n          />\n\n          <div>\n            <WrappedField\n              name=\"url\"\n              type=\"string\"\n              style={{ display: urlDisabled ? 'none' : 'inline' }}\n              value={\n                values.url ||\n                `${baseUrl}${slugify(values.title || '', {\n                  lower: true,\n                  remove: /[*+~.()'\"!:@]/g,\n                })}`\n              }\n              errors={errors}\n            />\n            <span className=\"dataset_url\" style={{ display: urlDisabled ? 'inline' : 'none' }}>\n              {`${baseUrl}${slugify(values.title || '', {\n                lower: true,\n                remove: /[*+~.()'\"!:@]/g,\n              })}`}\n            </span>\n\n            <button\n              type=\"button\"\n              className=\"usa-button dataset_url_edit\"\n              style={{ display: urlDisabled ? 'inline' : 'none' }}\n              onClick={() => {\n                setUrlDisabled(false);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Description\"\n          name=\"description\"\n          type=\"string\"\n          component=\"textarea\"\n          rows=\"6\"\n          helptext={helpTexts.description}\n          value={values.description}\n          errors={errors}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <span className=\"usa-label\">Tags*</span>\n        <TagsAutocomplete\n          id=\"tags-autocomplete-input\"\n          tags={values.tags}\n          apiUrl={apiUrl}\n          apiKey={apiKey}\n          name=\"tags\"\n          titleField=\"name\"\n          required\n          placeholderText=\"Start typing to search\"\n          errors={errors}\n          helptext={helpTextify(\n            'Use both technical and non-technical terms to help users find your dataset.'\n          )}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Publisher\"\n          name=\"publisher\"\n          type=\"select\"\n          choices={leafPublishers}\n          required\n          className=\"error-msg\"\n          helptext={helpTexts.select}\n          infoText=\"The publishing entity (e.g. your agency) and optionally their parent organization(s).\"\n          errors={errors}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField label=\"Sub Agency\" name=\"subagency\" type=\"string\" required errors={errors} />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Contact Name\"\n          name=\"contact_name\"\n          type=\"string\"\n          required\n          infoText=\"This should be the person who can best answer or triage questions about this dataset, either on the metadata or the substance of the data resources.\"\n          errors={errors}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Contact Email\"\n          name=\"contact_email\"\n          type=\"string\"\n          required\n          errors={errors}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Unique ID\"\n          name=\"unique_id\"\n          type=\"string\"\n          required\n          infoText=\"This is the ID number or code used within your agency to differentiate this dataset from other datasets.\"\n          errors={errors}\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"Public Access level\"\n          name=\"public_access_level\"\n          type=\"select\"\n          choices={['public', 'restricted public', 'non-public']}\n          className=\"error-msg\"\n          errors={errors}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <WrappedField\n          label=\"License\"\n          name=\"license_new\"\n          type=\"select\"\n          choices={['MIT', 'Open Source License', 'Others']}\n          className=\"error-msg\"\n          errors={errors}\n          required\n        />\n        <WrappedField\n          name=\"license_others\"\n          type=\"string\"\n          helptext={helpTextify(\n            `If you selected “Other”, please specify the name of your License*'`\n          )}\n          disabled={values.license_new !== 'Others'}\n          errors={errors}\n          required\n        />\n      </div>\n      <div className=\"row\">\n        <span className=\"usa-label\">Rights</span> <br />\n        {errors && errors.rights && <span className=\"error-msg\">{errors.rights}</span>}\n        <Radio\n          label=\"My dataset is public\"\n          name=\"access_level_comment\"\n          errors={errors}\n          value=\"true\"\n          id=\"rights_option_1\"\n        />\n        <Radio\n          label=\"My dataset is not public\"\n          name=\"access_level_comment\"\n          value=\"false\"\n          id=\"rights_option_2\"\n        />\n        <WrappedField\n          name=\"rights_desc\"\n          type=\"string\"\n          value={values.rights_desc}\n          errors={errors}\n          helptext={helpTextify(\n            'If your dataset is not public, please add an explanation of rights and feel free to include any instructions on restrictions, or how to access a restricted file (max 255 characters)*'\n          )}\n          disabled={values.access_level_comment === 'true'}\n        />\n      </div>\n\n      <div className=\"row\">\n        <span className=\"usa-label\">Relevant Location*</span> <br />\n        {errors && errors.spatial && <span className=\"error-msg\">{errors.spatial}</span>}\n        <Radio\n          label=\"My dataset does not have a spatial component\"\n          name=\"spatial\"\n          value=\"false\"\n          errors={errors}\n          id=\"spatial_option_1\"\n        />\n        <Radio\n          label=\"My dataset does have a spatial component\"\n          name=\"spatial\"\n          value=\"true\"\n          id=\"spatial_option_2\"\n        />\n        <WrappedField\n          name=\"spatial_location_desc\"\n          type=\"string\"\n          value={values.spatial_location_desc}\n          errors={errors}\n          helptext={helpTextify(\n            'If your dataset has a spatial component, please provide location such as place name or latitude/longitude pairs above*'\n          )}\n          disabled={values.spatial === 'false'}\n        />\n      </div>\n\n      <div className=\"row\">\n        <span className=\"usa-label\">\n          Temporal*\n          <div className={`tooltip ${toolTipShown ? 'show' : ''}`}>\n            <Info\n              tabIndex={0}\n              height=\"20px\"\n              width=\"20px\"\n              style={{ marginLeft: '.5em' }}\n              onClick={() => toggleToolTip()}\n              onKeyUp={(e) => {\n                if (e.keyCode === 13) {\n                  toggleToolTip();\n                }\n              }}\n            />\n            <span className=\"tooltiptext\">\n              <span\n                tabIndex={0}\n                className=\"close\"\n                onClick={() => setToolTipShown(false)}\n                role=\"button\"\n                onKeyDown={() => setToolTipShown(false)}\n              >\n                <span className=\"close-tag\">&times;</span>\n              </span>\n              <h3>Temporal</h3>\n              <p>\n                For example, for a 2010 Census dataset, the temporal extent would cover a period of\n                time beginning 2000-04-02 and ending 2010-04-01.\n              </p>\n            </span>\n          </div>\n        </span>{' '}\n        <br />\n        {errors && errors.temporal && <span className=\"error-msg\">{errors.temporal}</span>}\n        <Radio\n          label=\"My dataset does not have a start and end date for the applicability of data\"\n          name=\"temporal\"\n          value=\"false\"\n          errors={errors}\n          id=\"temporal_option_1\"\n        />\n        <Radio\n          label=\"My dataset has a start and end date for the applicability of data\"\n          name=\"temporal\"\n          value=\"true\"\n          errors={errors}\n          id=\"temporal_option_2\"\n        />\n        <WrappedField\n          name=\"temporal_start_date\"\n          type=\"date\"\n          id=\"temporal_start_date\"\n          value={values.temporal_start_date}\n          errors={errors}\n          helptext={helpTextify(\n            'If your dataset has a temporal component, please provide start date for applicability of data above*'\n          )}\n          disabled={values.temporal === 'false'}\n        />\n        <WrappedField\n          name=\"temporal_end_date\"\n          type=\"date\"\n          id=\"temporal_end_date\"\n          value={values.temporal_end_date}\n          errors={errors}\n          helptext={helpTextify(\n            'If your dataset has a temporal component, please provide start date for applicability of data above*'\n          )}\n          disabled={values.temporal === 'false'}\n        />\n      </div>\n\n      <div className=\"row\">\n        <button type=\"button\" className=\"usa-button usa-button--outline\">\n          Save as draft\n        </button>\n        <button className=\"usa-button\" type=\"submit\">\n          Save and Continue\n        </button>\n      </div>\n    </div>\n  );\n};\n\nRequiredMetadata.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  values: PropTypes.any, // eslint-disable-line\n  errors: PropTypes.any, // eslint-disable-line\n};\n\nexport default RequiredMetadata;\n","import * as yup from 'yup';\n\nexport default yup.object().shape({\n  title: yup.string().required('Title is required'),\n  contact_name: yup.string().required('Contact is required'),\n  unique_id: yup.string().required('Unique ID is required'),\n  contact_email: yup.string().email('Must be valid email').required('Contact email is required'),\n  description: yup.string().required('Description is required'),\n  tags: yup\n    .array()\n    .of(\n      yup.object().shape({\n        name: yup\n          .string()\n          .min(2)\n          .max(100)\n          .matches(/[a-zA-Z0-9-_.]+/),\n        vocabulary_id: yup.string(),\n      })\n    )\n    .required(\n      'Tags are required. Please, provide at least one tag. Note that a tag name must be a string between 2 and 100 characters long containing only alphanumeric characters and -, _ and .'\n    ),\n  publisher: yup.string().required('Publisher is required'),\n  subagency: yup.string(),\n  public_access_level: yup.string().required('Access level is required'),\n  access_level_comment: yup\n    .string()\n    .required('Rights is required.')\n    .test('rights-desc', 'Please add explanation of rights', function validate(value) {\n      const formVals = this.from[0].value;\n      if (value === 'false') {\n        if (!formVals.rights_desc) return false;\n      }\n      return true;\n    }),\n  rights_desc: yup.string(),\n  spatial: yup\n    .string()\n    .test('spatial-location-extra', 'Please provide location description.', function validate(\n      value\n    ) {\n      const formVals = this.from[0].value;\n      if (value === 'true') {\n        if (!formVals.spatial_location_desc) return false;\n      }\n      return true;\n    }),\n  spatial_location_desc: yup.string(),\n  license_others: yup.string(),\n  license_new: yup\n    .string()\n    .required('License is required')\n    .test('license-extra', 'Please specify the name of your license', function validate(value) {\n      const formVals = this.from[0].value;\n      if (value === 'Others') {\n        if (!formVals.license_others) return false;\n      }\n      return true;\n    }),\n  temporal: yup\n    .string()\n    .test('temporal-start-end', 'Please specify start and end date', function validate(value) {\n      const formVals = this.from[0].value;\n      if (value === 'true') {\n        if (!formVals.temporal_start_date || !formVals.temporal_end_date) return false;\n      }\n      return true;\n    }),\n  temporal_start_date: yup.date(),\n  temporal_end_date: yup.date(),\n});\n","export default {\n  title: 'Title',\n  contact_name: 'Contact Name',\n  unique_id: 'Unique ID',\n  contact_email: 'Contact Email',\n  description: 'Description',\n  publisher: 'Publisher',\n  public_access_level: 'Public Access Level',\n  data_quality: 'Access Level',\n  access_level_comment: 'Rights',\n  spatial: 'Spatial',\n  license_new: 'License',\n  temporal: 'Temporal',\n};\n","export default {\n  access_level_comment: 'true',\n  spatial: 'false',\n  spatial_location: 'false',\n  temporal: 'false',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WrappedField from '../WrappedField';\nimport HelpText from '../HelpText';\n\nconst languages = require('./languages.json');\n\nconst helpTexts = {\n  theme: <HelpText>Examples include: vegetables, non_starchy, green.</HelpText>,\n  describedBy: (\n    <HelpText>\n      Provide a link to data dictionary or other reference that helps users understand the dataset.\n      Example: &quot;http://www.agency.gov/vegetables/vegetables-all.zip&quot;\n    </HelpText>\n  ),\n  landingPage: (\n    <HelpText>\n      This landing page should contain or be linked to all resources tied to the dataset. Example:\n      &quot;http://www.agency.gov/vegetables&quot;\n    </HelpText>\n  ),\n  primaryITInvestmentUIIUSG: (\n    <HelpText>\n      This can often be found in Exhibit 53 documents, and takes the form ###-#########. Learn more\n      about Exhibit 53 documents at{' '}\n      <a href=\"https://www.whitehouse.gov/wp-content/uploads/2018/06/fy-2020-it-budget-guidance.pdf\">\n        this pdf\n      </a>\n    </HelpText>\n  ),\n  references: (\n    <HelpText>\n      Related documents such as technical information about a dataset, developer documentation, etc.\n      Format for entry is: http://www.agency.gov/fruits/fruits.csv,\n      http://www.agency.gov/legumes/legumes\n    </HelpText>\n  ),\n  systemOfRecordsUSG: (\n    <HelpText>\n      If the dataset is a designated System of Records under the Privacy Act of 1974, provide the\n      URL for the System of Recors Notice\n    </HelpText>\n  ),\n};\n\nconst AdditionalMetadata = () => {\n  const [state, setState] = React.useState({\n    languageRegSubTag: '',\n    languageSubTag: '',\n  });\n\n  const handleLanguageSubTag = (event) => {\n    setState({ ...state, languageRegSubTag: '', languageSubTag: event.target.value });\n  };\n  const handleLanguageRegionalSubTag = (event) => {\n    setState({ ...state, languageRegSubTag: event.target.value });\n  };\n  return (\n    <div className=\"usa-form-custom\">\n      <section id=\"section-basic-mega-menu\" className=\"site-component-section\">\n        <p className=\"site-text-intro\">\n          Please note that the additional metadata that you upload will help public users better\n          find and use this dataset. Not all of these criteria will apply to each dataset, so feel\n          free to only answer what applies. For more information about the form fields, consult the{' '}\n          <a href=\"https://resources.data.gov/schemas/dcat-us/v1.1/\">DCAT-US Schema</a>\n        </p>\n      </section>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Meets Agency Data Quality\"\n            name=\"dataQualityUSG\"\n            type=\"select\"\n            choices={['Yes', 'No']}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Themes\"\n            name=\"category\"\n            type=\"string\"\n            helptext=\"Main thematic category of the dataset.  If this dataset should be included in geoplatform.gov, please enter “geospatial” as the theme.  Start typing to add themes.\"\n            infoText={helpTexts.theme}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Data Dictionary URL\"\n            name=\"data_dictionary\"\n            type=\"string\"\n            helptext='Please include \"http://\" at the beginning of your URL.'\n            infoText={helpTexts.describedBy}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField label=\"Data Dictionary Type\" name=\"data_dictionary_type\" type=\"string\" />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Data Publishing Frequency\"\n            name=\"accrual_periodicity\"\n            type=\"select\"\n            choices={[\n              'Decennial',\n              'Quadrennial',\n              'Annual',\n              'Bimonthly',\n              'Semiweekly',\n              'Daily',\n              'Biweekly',\n              'Semiannual',\n              'Biennial',\n              'Triennial',\n              'Three times a week',\n              'Three times a month',\n              'Every five years',\n              'Every eight years',\n              'Continuously updated',\n              'Monthly',\n              'Quarterly',\n              'Semimonthly',\n              'Three times a year',\n              'Weekly',\n              'Hourly',\n              'Irregular',\n            ]}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Dataset Landing Page URL\"\n            name=\"homepage_url\"\n            type=\"string\"\n            helptext='Please include \"http://\" at the beginning of your URL.'\n            infoText={helpTexts.landingPage}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Language - Language Subtag\"\n            name=\"languageSubTag\"\n            onSelect={handleLanguageSubTag}\n            type=\"selectWithState\"\n            value={state.languageSubTag}\n            choices={Object.keys(languages)}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            disabled={!state.languageSubTag}\n            label=\"Language - Regional Subtag\"\n            name=\"languageRegSubTag\"\n            onSelect={handleLanguageRegionalSubTag}\n            value={state.languageRegSubTag}\n            type=\"selectWithState\"\n            choices={languages[state.languageSubTag]}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Dataset's IT Unique Investment Identifier\"\n            name=\"primary_it_investment_uii\"\n            type=\"string\"\n            infoText={helpTexts.primaryITInvestmentUIIUSG}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Related Documents\"\n            name=\"related_documents\"\n            type=\"string\"\n            infoText={helpTexts.references}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"Release Date\"\n            name=\"release_date\"\n            type=\"date\"\n            infoText={helpTexts.references}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField\n            label=\"System of Records Notice URL\"\n            name=\"system_of_records\"\n            type=\"string\"\n            infoText={helpTexts.systemOfRecordsUSG}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"grid-col-12\">\n          <WrappedField label=\"Select Parent Dataset\" name=\"parent_dataset_id\" type=\"string\" />\n        </div>\n      </div>\n      <div className=\"row\">\n        <button type=\"button\" className=\"usa-button usa-button--line\">\n          Save as draft\n        </button>\n        <button className=\"usa-button\" type=\"submit\">\n          Save and continue\n        </button>\n      </div>\n    </div>\n  );\n};\n\nAdditionalMetadata.propTypes = {\n  values: PropTypes.shape({\n    dataQualityUSG: PropTypes.string,\n    theme: PropTypes.string,\n    describedBy: PropTypes.string,\n    describedByType: PropTypes.string,\n    accrualPeriodicity: PropTypes.string,\n    landingPage: PropTypes.string,\n    language: PropTypes.string,\n    primaryITInvestmentUIIUSG: PropTypes.string,\n    references: PropTypes.string,\n    issued: PropTypes.string,\n    systemOfRecordsUSG: PropTypes.string,\n    isPartOf: PropTypes.string,\n  }),\n};\n\nexport default AdditionalMetadata;\n","import * as yup from 'yup';\n\nexport default yup.object().shape({\n  dataQualityUSG: yup.string(),\n  category: yup.string(),\n  data_dictionary: yup.string().url(),\n  data_dictionary_type: yup.string(),\n  primary_it_investment_uii: yup\n    .string()\n    .trim()\n    .matches(/^[0-9]{3}-[0-9]{9}$/, 'uii should match format: 000-000000000'),\n  homepage_url: yup.string().url(),\n  related_documents: yup.string(),\n  deribed_by: yup.string().url(),\n  described_by_type: yup.string(),\n  system_of_records: yup.string(),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport WrappedField from '../WrappedField';\n\nconst ResourceUpload = (props) => {\n  const { values, setFieldValue, submitForm } = props; // eslint-disable-line\n  const resource = values.resource || {};\n  const { url, upload, name, description, mimetype, format } = resource;\n\n  const [linkToDataIsActive, setLinkToDataActive] = useState(false);\n  const [uploadDataFileIsActive, setUploadDataFileActive] = useState(false);\n\n  const handleFileChange = (event) => {\n    setUploadDataFileActive(!uploadDataFileIsActive);\n    if (!name) {\n      setFieldValue('resource.name', event.currentTarget.files[0].name);\n    }\n    if (!mimetype) {\n      setFieldValue('resource.mimetype', event.currentTarget.files[0].type);\n    }\n    if (!format) {\n      const detectedFormat =\n        event.currentTarget.files[0].name &&\n        event.currentTarget.files[0].name.split('.').slice(-1)[0];\n      setFieldValue('resource.format', detectedFormat || '');\n    }\n    setFieldValue('resource.upload', event.currentTarget.files[0]);\n  };\n\n  return (\n    <div className=\"usa-form-custom\">\n      <section id=\"section-basic-mega-menu\" className=\"site-component-section\">\n        <h1 className=\"usite-page-title\" id=\"basic-mega-menu\">\n          Resource Upload\n        </h1>\n        <p className=\"site-text-intro\">\n          You can add the URL of the dataset where it is available on the agency website. If you are\n          uploading the dataset itself, please notify the Data.gov team at{' '}\n          <a href=\"mailto:inventory-help@gsa.gov\">inventory-help@gsa.gov</a>. You can also add a URL\n          or file of information related to the dataset such as a data dictionary.\n        </p>\n      </section>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          {/* eslint-disable-next-line */}\n          <label className=\"usa-label\">Data</label>\n          {/* eslint-disable-next-line */}\n          {linkToDataIsActive ? (\n            <WrappedField\n              hidden={!linkToDataIsActive}\n              id=\"url\"\n              name=\"resource.url\"\n              type=\"url\"\n              placeholder='If you are linking to a dataset, please include \"http://\" at the beginning of your URL.'\n              value={url}\n              onClick={() => {\n                setFieldValue('resource.url', '');\n                setLinkToDataActive(false);\n              }}\n            />\n          ) : uploadDataFileIsActive ? (\n            <WrappedField\n              disabled\n              name=\"resource.fileName\"\n              type=\"string\"\n              value={upload.name}\n              onClick={() => {\n                setFieldValue('resource.upload', '');\n                setUploadDataFileActive(false);\n              }}\n            />\n          ) : (\n            <>\n              <br />\n              {/* eslint-disable-next-line */}\n              <label htmlFor=\"upload\" className=\"usa-button usa-button--base\">\n                <i className=\"fa fa-cloud-upload\" aria-hidden=\"true\" /> Upload data\n              </label>\n              <input id=\"upload\" name=\"resource.upload\" type=\"file\" onChange={handleFileChange} />\n              {/* eslint-disable-next-line */}\n              <label\n                htmlFor=\"url\"\n                className=\"usa-button usa-button--base\"\n                onClick={() => {\n                  setLinkToDataActive(!linkToDataIsActive);\n                }}\n              >\n                <i className=\"fa fa-link\" aria-hidden=\"true\" /> Link to data\n              </label>\n            </>\n          )}\n          <p className=\"usa-helptext\">\n            Formats accepted include the following: TXT, HTML, TSV, CSV, ODT, XML, Perl.\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <WrappedField\n            label=\"Name\"\n            name=\"resource.name\"\n            type=\"string\"\n            placeholder=\"\"\n            helptext=\"\"\n            value={name}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <WrappedField\n            label=\"Description\"\n            name=\"resource.description\"\n            type=\"string\"\n            component=\"textarea\"\n            rows=\"6\"\n            helptext=\"You can use Markdown Formatting here.\"\n            value={description}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <WrappedField\n            label=\"Media Type\"\n            name=\"resource.mimetype\"\n            type=\"select\"\n            choices={['Type 1 ', 'Type 2', 'Type 3', 'Type 4']}\n            helptext=\"Start typing to select a media type.  Examples include: text/csv, application/xml, or application/json.\"\n            value={mimetype}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <WrappedField\n            label=\"Format\"\n            name=\"resource.format\"\n            type=\"string\"\n            helptext=\"Examples include: csv, xml, json.  This will be guessed automatically.  Leave blank if you wish.\"\n            value={format}\n          />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <button\n            type=\"button\"\n            className=\"usa-button usa-button--outline\"\n            onClick={() => {\n              setFieldValue('publish', false);\n              setLinkToDataActive(false);\n              setUploadDataFileActive(false);\n              submitForm();\n            }}\n          >\n            Save and add another resource\n          </button>\n        </div>\n      </div>\n\n      {values.savedResources > 0 ? (\n        <div className=\"row\">\n          <div className=\"col-md-12 text-mint\">\n            <i>\n              Resource saved: [{values.lastSavedResourceName}] ({values.savedResources} resources\n              saved in total).\n            </i>\n            <br />\n            <i>You can edit any saved resource after clicking &quot;Finish and publish&quot;.</i>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div className=\"col-sm-12\">\n        <br />\n        <br />\n        <button type=\"button\" className=\"usa-button usa-button--outline\">\n          Save as draft\n        </button>\n        <button\n          className=\"usa-button\"\n          type=\"button\"\n          onClick={() => {\n            setFieldValue('publish', true);\n            submitForm();\n          }}\n        >\n          Finish and publish\n        </button>\n      </div>\n    </div>\n  );\n};\n\nResourceUpload.propTypes = {\n  setFieldValue: PropTypes.func,\n  submitForm: PropTypes.func,\n  values: PropTypes.shape({\n    resource: {\n      url: PropTypes.string,\n      upload: PropTypes.any, // eslint-disable-line\n      name: PropTypes.string,\n      description: PropTypes.string,\n      mimetype: PropTypes.string,\n      format: PropTypes.string,\n    },\n    publish: PropTypes.bool,\n    savedResources: PropTypes.number,\n    lastSavedResourceName: PropTypes.string,\n  }),\n};\n\nexport default ResourceUpload;\n","import * as yup from 'yup';\n\nexport default yup.object().shape({\n  name: yup.string(),\n  description: yup.string(),\n  mimetype: yup.string(),\n  format: yup.string(),\n  url: yup.string(),\n  upload: yup.mixed(),\n});\n","export default {\n  name: '',\n  description: '',\n  url: '',\n  format: '',\n  mimetype: '',\n  upload: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Navigation block for moving between form pages (steps)\n// Step 1 -- Required metadata\n// Step 2 -- Additional metadata\n// Step 3 -- Resource uploads / links\nconst Navigation = (props) => {\n  const { currentStep, handleSteps } = props;\n  return (\n    <div className=\"app_navigation\" id=\"app_navigation\">\n      <div\n        tabIndex=\"0\"\n        role=\"button\"\n        className={`navsec ${currentStep === 0 ? 'active' : ''}`}\n        onClick={() => handleSteps(0)}\n        onKeyUp={(e) => {\n          if (e.keyCode === 13) {\n            handleSteps(0);\n          }\n        }}\n        id=\"nav-item-first\"\n      >\n        <span>Required Metadata</span>\n      </div>\n      <div\n        tabIndex=\"0\"\n        role=\"link\"\n        className={`navsec ${currentStep === 1 ? 'active' : ''}`}\n        onKeyUp={(e) => {\n          if (e.keyCode === 13) {\n            handleSteps(1);\n          }\n        }}\n        onClick={() => {\n          handleSteps(1);\n        }}\n      >\n        <span>Additional Metadata</span>\n      </div>\n      <div\n        tabIndex=\"0\"\n        role=\"button\"\n        className={`navsec ${currentStep === 2 ? 'active' : ''}`}\n        onKeyUp={(e) => {\n          if (e.keyCode === 13) {\n            handleSteps(2);\n          }\n        }}\n        onClick={() => {\n          handleSteps(2);\n        }}\n      >\n        <span>Resource Upload</span>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  handleSteps: PropTypes.func.isRequired,\n};\n\nexport default Navigation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../css/uswds.css';\n\nconst AlertBox = (props) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const { type, errors, message, heading } = props;\n  const formErrors =\n    errors &&\n    errors.map((error) => (\n      <p key={error.name}>\n        <b>{error.label}</b> {error.message}\n      </p>\n    ));\n  return (\n    <div className=\"usa-prose\">\n      <div className=\"usa-alert__body\">\n        <div className={`usa-alert usa-alert--${type}`}>\n          <div className=\"icon\" />\n          <div className=\"usa-alert__body\">\n            <h3 className=\"usa-alert__heading\">{heading}</h3>\n            <div className=\"usa-alert__text\">\n              {message}\n              {formErrors}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAlertBox.propTypes = {\n  errors: PropTypes.array, // eslint-disable-line\n  heading: PropTypes.string,\n  message: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default AlertBox;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport RequiredMetadata from '../RequiredMetadata';\nimport RequiredMetadataSchema from '../RequiredMetadata/validationSchema';\nimport RequiredMetadataLabels from '../RequiredMetadata/validationLabels';\nimport defaultRequiredValues from '../RequiredMetadata/defaultValues';\nimport AdditionalMetadata from '../AdditionalMetadata';\nimport AdditionalMetadataSchema from '../AdditionalMetadata/validationSchema';\nimport ResourceUpload from '../ResourceUpload';\nimport ResourceUploadSchema from '../ResourceUpload/validationSchema';\nimport ResourceObject from '../ResourceUpload/ResourceObject';\nimport Navigation from '../Navigation';\nimport AlertBox from '../AlertBox';\nimport Api from '../../api';\nimport '../../css/custom.css';\nimport '../../css/uswds.css';\n\nconst formatErrors = (errors) =>\n  Object.keys(errors).map((name) => {\n    return {\n      name,\n      label: RequiredMetadataLabels[name],\n      message: errors[name],\n    };\n  });\n\nconst Heading = (props) => {\n  const { currentStep } = props;\n\n  if (currentStep === 0) {\n    return (\n      <h1 className=\"usite-page-title\" id=\"basic-mega-menu\">\n        Required Metadata\n      </h1>\n    );\n  }\n  if (currentStep === 1) {\n    return (\n      <h1 className=\"usite-page-title\" id=\"basic-mega-menu\">\n        Additional Metadata\n      </h1>\n    );\n  }\n  return '';\n};\n\nconst MetadataForm = (props) => {\n  const { apiUrl, apiKey, ownerOrg, datasetId } = props;\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n  const [curDatasetId, setCurDatasetId] = useState(datasetId); // initial or fetched\n  const [formValues, setFormValues] = useState(defaultRequiredValues);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [alert, setAlert] = useState();\n\n  if (curDatasetId && shouldFetch) {\n    setShouldFetch(false);\n    Api.fetchDataset(curDatasetId, apiUrl, apiKey)\n      .then((result) => {\n        const apiRes = Object.assign({}, result);\n        apiRes.description = result.notes;\n        setFormValues(Object.assign({}, apiRes));\n        setCurDatasetId(apiRes.id);\n      })\n      .catch((e) => {\n        setAlert(\n          <AlertBox\n            type=\"error\"\n            heading=\"Error loading metadata\"\n            message=\"See the console output for more information on this error.\"\n          />\n        );\n        console.error('CREATE DATASET ERROR', e); // eslint-disable-line\n        window.scrollTo(0, 0);\n      });\n  }\n\n  // render metadata form\n  return (\n    <div className=\"grid-container\">\n      <Navigation currentStep={currentStep} handleSteps={setCurrentStep} />\n      <Heading currentStep={currentStep} />\n      {alert}\n\n      {/* ---------- PAGE 1 -- REQUIRED METADATA ---------- */}\n      {currentStep === 0 && (\n        <Formik\n          initialValues={formValues}\n          enableReinitialize=\"true\"\n          validateOnChange={false}\n          validateOnBlur={false}\n          validateOnMount={false}\n          onSubmit={(values) => {\n            // update or create dataset:\n            if (curDatasetId) {\n              Api.updateDataset(curDatasetId, values, apiUrl, apiKey)\n                .then((res) => {\n                  setFormValues(Object.assign({}, res, { description: res.notes }));\n                  setAlert(<AlertBox type=\"success\" heading=\"Dataset saved successfully\" />);\n                  setCurrentStep(1);\n                })\n                .catch((e) => {\n                  setAlert(\n                    <AlertBox\n                      type=\"error\"\n                      heading=\"Error saving metadata\"\n                      // message=\"See the console output for more information on this error.\"\n                      message={JSON.stringify(e)}\n                    />\n                  );\n                  console.error('CREATE DATASET ERROR', e); // eslint-disable-line\n                });\n            } else {\n              Api.createDataset(ownerOrg, values, apiUrl, apiKey)\n                .then((res) => {\n                  setFormValues(res);\n                  setCurDatasetId(res.id);\n                  setAlert(<AlertBox type=\"success\" heading=\"Dataset saved successfully\" />);\n                  setCurrentStep(1);\n                  window.scrollTo(0, 0);\n                })\n                .catch((e) => {\n                  setAlert(\n                    <AlertBox\n                      type=\"error\"\n                      heading=\"Error saving metadata\"\n                      message={JSON.stringify(e)}\n                      // message=\"See the console output for more information on this error.\"\n                    />\n                  );\n                  console.error('CREATE DATASET ERROR', e); // eslint-disable-line\n                });\n            }\n          }}\n          validationSchema={RequiredMetadataSchema}\n        >\n          {({ values, handleSubmit, errors }) => {\n            return (\n              <div>\n                {errors && Object.keys(errors).length > 0 && (\n                  <div>\n                    <AlertBox\n                      type=\"error\"\n                      heading=\"This form contains invalid entries\"\n                      errors={formatErrors(errors)}\n                    />\n                  </div>\n                )}\n                <Form onSubmit={handleSubmit}>\n                  <div>\n                    <RequiredMetadata\n                      apiKey={apiKey}\n                      apiUrl={apiUrl}\n                      ownerOrg={ownerOrg}\n                      currentStep={0}\n                      fetchDatasetsOpts=\"false\"\n                      values={values || {}}\n                      errors={errors}\n                    />\n                  </div>\n                </Form>\n              </div>\n            );\n          }}\n        </Formik>\n      )}\n\n      {/* ---------- PAGE 2 -- ADDITIONAL METADATA ---------- */}\n      {currentStep === 1 && (\n        <Formik\n          initialValues={formValues}\n          enableReinitialize=\"true\"\n          validateOnChange={false}\n          validateOnBlur={false}\n          onSubmit={(values) => {\n            const id = formValues && formValues.id;\n            setFormValues(Object.assign({}, formValues, values));\n            if (id) {\n              Api.updateDataset(id, values, apiUrl, apiKey)\n                .then((res) => {\n                  console.log('Dataset updated successfully', res); // eslint-disable-line\n                  setCurrentStep(2);\n                })\n                .catch((error) => {\n                  const message = JSON.stringify(error);\n                  setAlert(\n                    <AlertBox\n                      type=\"error\"\n                      heading=\"Error saving additional metadata\"\n                      message={message}\n                    />\n                  );\n                  console.error('UPDATE DATASET ERROR', error); // eslint-disable-line\n                });\n            } else {\n              setAlert(\n                <AlertBox\n                  type=\"error\"\n                  heading=\"No valid metadata saved in step 1.\"\n                  message=\"Please complete complete step one before submitting step 2.\"\n                />\n              );\n            }\n          }}\n          validationSchema={AdditionalMetadataSchema}\n        >\n          {({ values, handleSubmit, errors }) => {\n            return (\n              <div>\n                {errors && Object.keys(errors).length > 0 && (\n                  <div>\n                    <AlertBox\n                      type=\"error\"\n                      heading=\"This form contains invalid entries\"\n                      errors={formatErrors(errors)}\n                    />\n                  </div>\n                )}\n                <Form onSubmit={handleSubmit}>\n                  <div>\n                    <AdditionalMetadata\n                      apiKey={apiKey}\n                      apiUrl={apiUrl}\n                      ownerOrg={ownerOrg}\n                      currentStep={1}\n                      fetchDatasetsOpts=\"false\"\n                      values={values || {}}\n                      errors={errors}\n                    />\n                  </div>\n                </Form>\n              </div>\n            );\n          }}\n        </Formik>\n      )}\n      {/* ---------- PAGE 3 -- RESOURSE UPLOAD ---------- */}\n      {currentStep === 2 && (\n        <Formik\n          initialValues={{\n            resource: JSON.parse(JSON.stringify(ResourceObject)),\n            publish: true,\n            savedResources: 0,\n            lastSavedResourceName: null,\n          }}\n          enableReinitialize=\"true\"\n          validateOnChange={false}\n          validateOnBlur={false}\n          onSubmit={(values, { setFieldValue }) => {\n            // Check if resource should be created, eg, user added any metadata:\n            const resourceMetadataChanged =\n              JSON.stringify(ResourceObject) !== JSON.stringify(values.resource);\n            if (curDatasetId) {\n              const apiUrlObject = new URL(apiUrl);\n              const datasetPageUrl = `${apiUrlObject.origin}/dataset/${curDatasetId}`;\n              if (resourceMetadataChanged) {\n                Api.createResource(curDatasetId, values.resource, apiUrl, apiKey)\n                  .then((res) => {\n                    if (res.status === 200) {\n                      if (values.publish) {\n                        // Redirect to dataset page\n                        window.location.replace(datasetPageUrl);\n                      } else {\n                        setFieldValue('savedResources', values.savedResources + 1);\n                        setFieldValue('lastSavedResourceName', values.resource.name);\n                        setFieldValue('resource', JSON.parse(JSON.stringify(ResourceObject)));\n                      }\n                    }\n                  })\n                  .catch((error) => {\n                    const message = JSON.stringify(error);\n                    setAlert(\n                      <AlertBox type=\"error\" heading=\"Error saving resource(s)\" message={message} />\n                    );\n                    console.error('CREATE RESOURCE ERROR', error); // eslint-disable-line\n                  });\n              } else {\n                // Redirect to dataset page\n                window.location.replace(datasetPageUrl);\n              }\n            } else {\n              setAlert(\n                <AlertBox\n                  type=\"error\"\n                  heading=\"No valid metadata saved in previous steps.\"\n                  message=\"Please complete previous steps before submitting resource(s).\"\n                />\n              );\n            }\n          }}\n          validationSchema={ResourceUploadSchema}\n          render={({ values, errors, handleSubmit, setFieldValue, submitForm }) => (\n            <div className=\"\">\n              {errors && Object.keys(errors).length > 0 && (\n                <div>\n                  <AlertBox\n                    type=\"error\"\n                    heading=\"This form contains invalid entries\"\n                    errors={formatErrors(errors)}\n                  />\n                </div>\n              )}\n              <Form onSubmit={handleSubmit}>\n                <ResourceUpload\n                  values={values}\n                  setFieldValue={setFieldValue}\n                  submitForm={submitForm}\n                />\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <br />\n                    <br />\n                  </div>\n                </div>\n              </Form>\n            </div>\n          )}\n        />\n      )}\n    </div>\n  );\n};\n\nMetadataForm.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  ownerOrg: PropTypes.string, // required if creating new metadata\n  datasetId: PropTypes.string,\n};\n\nexport default MetadataForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MetadataForm from './components/MetadataForm';\n\nconst App = (props) => {\n  const { apiUrl, apiKey, ownerOrg, datasetId } = props;\n  console.log({ apiUrl, apiKey, ownerOrg }); // eslint-disable-line\n  return (\n    <div className=\"App\">\n      <MetadataForm apiUrl={apiUrl} apiKey={apiKey} ownerOrg={ownerOrg} datasetId={datasetId} />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  apiUrl: PropTypes.string.isRequired,\n  apiKey: PropTypes.string.isRequired,\n  ownerOrg: PropTypes.string, // required if creating new dataset\n  datasetId: PropTypes.string,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\nconst apiUrl = root.getAttribute('data-apiUrl') || 'http://localhost:5000/api/3/action/';\nconst apiKey = root.getAttribute('data-apiKey') || 'a99bb2cc-c6da-4ea3-acf9-b7eab58c6c42';\nconst ownerOrg = root.getAttribute('data-ownerOrg') || '123';\nconst datasetId = root.getAttribute('data-datasetId');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App apiUrl={apiUrl} apiKey={apiKey} ownerOrg={ownerOrg} datasetId={datasetId} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}