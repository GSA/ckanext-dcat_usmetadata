[DEFAULT]
debug = true
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = config:/usr/lib/ckan/src/ckan/test-core.ini

# This is the secret token that the beaker library uses to hash the cookie sent
# to the client. `paster make-config` generates a unique value for this each
# time it generates a config file.
beaker.session.secret = EqF8Z9z+c6lsEKHJzGJygghqz

# `paster make-config` generates a unique value for this each time it generates
# a config file.
app_instance_uuid = 054d2b22-a3b9-4698-853d-63bbd151ecc1

## Database Settings
sqlalchemy.url = postgresql://ckan:pass@db/ckan

ckan.datastore.write_url = postgresql://datastore:pass@datastore/datastore
ckan.datastore.read_url = postgresql://datastore_ro:pass@datastore/datastore

# PostgreSQL' full-text search parameters
ckan.datastore.default_fts_lang = english
ckan.datastore.default_fts_index_method = gist

## Site Settings

ckan.site_url = http://localhost:5000

ckan.site_id = inventory
solr_url = http://solr:8983/solr/inventory
ckan.plugins = usmetadata datajson stats text_view recline_view dcat_usmetadata

# Define which views should be created by default
# (plugins must be loaded in ckan.plugins)
ckan.views.default_views = recline_view text_view image_view webpage_view recline_grid_view

## Authorization Settings

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = false
ckan.auth.user_create_organizations = false
ckan.auth.user_delete_groups = true
ckan.auth.user_delete_organizations = true
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = true
ckan.auth.roles_that_cascade_to_sub_groups = admin


# Logging configuration
[loggers]
keys = root, ckan, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_ckan]
qualname = ckan
handlers =
level = INFO

[logger_sqlalchemy]
handlers =
qualname = sqlalchemy.engine
level = WARN

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
