name: Tests
on: [pull_request]
env:
  CODE_COVERAGE_THRESHOLD_REQUIRED: 33
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Install requirements
        run: pip install flake8 pycodestyle pytest pytest-ckan pytest-cov
      - name: Check syntax
        run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude ckan,nose
      - name: Run flake8
        run: flake8 . --count --max-line-length=127 --statistics --exclude ckan,nose

  test:
    needs: lint
    strategy:
      matrix:
        ckan-version: [2.9, 2.8]
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:${{ matrix.ckan-version }}
    services:
      solr:
        image: datagov/catalog.data.gov.solr:latest
      db:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 10
      redis:
          image: redis:alpine
    env:
      ENV_FILE: .env
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@db/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@db/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@db/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v2
    - name: Install dependency (common)
      run: |
        apk add swig npm
        pip install -r dev-requirements.txt
        npm install --global yarn
        yarn install
    - name: Install requirements and Setup (py3)
      if: ${{ matrix.ckan-version == '2.9' }}
      run: |
        pip install -r requirements.txt
        pip install -e .
        source $ENV_FILE
        ckan -c test.ini db init
    - name: Install requirements and Setup (py2)
      if: ${{ matrix.ckan-version == '2.8' }}
      run: |
        pip install -r requirements-py2.txt
        pip install -e .
        source $ENV_FILE
        paster --plugin=ckan db init -c test.ini
    - name: Run tests
      run: |
        yarn build:metadata-app
        pytest --ckan-ini=test.ini --cov=ckanext.dcat_usmetadata --cov-fail-under=${CODE_COVERAGE_THRESHOLD_REQUIRED} --disable-warnings ckanext/dcat_usmetadata/tests
        yarn e2e

