name: Tests
on: [push, workflow_dispatch]

jobs:
  lint-test:
    name: Lint + Test
    uses: gsa/data.gov/.github/workflows/ckan-test.yml@main
    with:
      ext_name: dcat_usmetadata
      plugins: dcat_usmetadata usmetadata
    secrets: inherit

  lint-js:
    name: JS Lint and Build Metadata App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - name: Install dependencies
        run: |
          yarn
          CI=false yarn build
      - name: Run eslint
        run: yarn lint:js

  test-js:
    needs: lint-js
    name: Node Tests for Metadata-app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - name: Install dependencies
        run: |
          yarn
          CI=false yarn build
      - name: Run node tests
        run: yarn test:metadata-app

  cypress_29:
    name: Cypress Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-files:
          [
            'additional-metadata.spec.js',
            'organization.spec.js',
            'required-metadata.spec.js',
            'user-flow.spec.js',
            'edit-dataset.spec.js',
            'publishers.spec.js',
            'resource-upload.spec.js',
          ]
      fail-fast: false
    env:
      ENV_FILE: .env
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@db/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@db/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@db/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - name: cypress
        run: |
          source $ENV_FILE
          CKAN_VERSION=2.10 yarn install
          CKAN_VERSION=2.10 yarn build
          CKAN_VERSION=2.10 yarn dockerize
          CKAN_VERSION=2.10 docker-compose -f docker-compose.yml -f docker-compose.cypress.yml run cypress /bin/bash -c "npx wait-on http://ckan:5000/api/action/status_show && npx cypress install && yarn && NODE_ENV=test npx cypress run --spec cypress/integration/${{ matrix.test-files }}"
      - name: cypress-artifacs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-artifacts
          path: |
            ./cypress/screenshots/
            ./cypress/videos/
